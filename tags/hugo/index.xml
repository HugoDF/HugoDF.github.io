<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hugo on Code with Hugo</title>
    <link>https://codewithhugo.com/tags/hugo/</link>
    <description>Recent content in Hugo on Code with Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Fri, 17 Aug 2018 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://codewithhugo.com/tags/hugo/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Switching the lights on: Hugo vs Hugo config files</title>
      <link>https://codewithhugo.com/switching-the-lights-on-hugo-vs-hugo-config-files/</link>
      <pubDate>Fri, 17 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://codewithhugo.com/switching-the-lights-on-hugo-vs-hugo-config-files/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;A simple Hugo blog setup&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The story of getting &lt;a href=&#34;https://codewithhugo.com&#34;&gt;codewithhugo.com&lt;/a&gt; up and running.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;tl;dr&lt;/strong&gt; is the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I always rave about my blog setup, it’s simple, fast and just works&lt;/li&gt;
&lt;li&gt;I used &lt;a href=&#34;http://gohugo.io&#34;&gt;Hugo&lt;/a&gt;, “The world’s fastest framework for building websites”, a static site generator&lt;/li&gt;
&lt;li&gt;I used a theme, &lt;a href=&#34;https://github.com/eueung/hugo-casper-two&#34;&gt;casper-two&lt;/a&gt;, which is a Hugo port of the &lt;a href=&#34;https://ghost.org/&#34;&gt;https://ghost.org/&lt;/a&gt; default theme&lt;/li&gt;
&lt;li&gt;I deployed to GitHub pages behind Cloudflare *.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There&amp;rsquo;s been an update in the deployment saga, read it here: &lt;a href=&#34;https://codewithhugo.com/a-tiny-case-study-about-migrating-to-netlify-when-disaster-strikes-at-github-featuring-cloudflare/&#34;&gt;&amp;ldquo;A tiny case study about migrating to Netlify when disaster strikes at GitHub, featuring Cloudflare&amp;rdquo;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This was sent out on the &lt;a href=&#34;https://buttondown.email/hugo&#34;&gt;Code with Hugo newsletter&lt;/a&gt; last Monday.
&lt;a href=&#34;https://buttondown.email/hugo&#34;&gt;Subscribe&lt;/a&gt; to get the latest posts right in your inbox (before anyone else).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;why-i-didn-t-build-my-own-website&#34;&gt;Why I didn’t build my own website 🏃‍♂️&lt;/h2&gt;

&lt;p&gt;I’m not a designer, and Code with Hugo wasn’t about me learning or showing off my website-making skills, it was about writing content consistently.
That’s why I used a template, Hugo and GitHub pages. It’s a static site with a CDN (Cloudflare) in front so pretty much nothing can go wrong. That means I &lt;em&gt;have&lt;/em&gt; to focus on the content.&lt;/p&gt;

&lt;h2 id=&#34;picking-a-theme-and-overriding-little-things&#34;&gt;Picking a theme and overriding little things 🖼&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/eueung/hugo-casper-two&#34;&gt;Casper Two&lt;/a&gt;, the &lt;a href=&#34;https://ghost.org&#34;&gt;ghost.org&lt;/a&gt; default theme is awesome.
I tweaked a couple of things, as you can see in my &lt;code&gt;static/overrides.css&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;site-title&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;font-weight&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;font-size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;rem&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;collection-title&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;text-transform&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;uppercase&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;font-size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;rem&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;font-weight&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;300&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;site-header&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nd&#34;&gt;before&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;background&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;rgba&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;//&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;This&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;was&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;only&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;needed&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;when&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;I&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;enabled&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;pygments&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;syntax&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;highlighting&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;site-wrapper&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;min-height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;auto&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;highlight&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Adding that stuff in &lt;code&gt;config.toml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;customCSS&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;overrides.css&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That’s all the CSS I wrote 🙂 .&lt;/p&gt;

&lt;h2 id=&#34;enabling-syntax-highlighting&#34;&gt;Enabling syntax highlighting 🎨&lt;/h2&gt;

&lt;p&gt;codewithhugo.com didn’t have syntax highlighting for a while, 😕 and I even started whining.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://d2mxuefqeaa7sj.cloudfront.net/s_3F94311F9467F8A3B0176D80603BB5F981B49B6D0E353DBB8DC8DC3DFEB48211_1533578484452_image.png&#34; alt=&#34;&amp;lt;blockquote&amp;gt;&amp;lt;p&amp;gt;When &amp;lt;a href=&amp;quot;https://twitter.com/ThePracticalDev?ref_src=twsrc%5Etfw&amp;quot;&amp;gt;@ThePracticalDev&amp;lt;/a&amp;gt; has better syntax highlighting than your blog 😂😂 does anyone  know how to sort out &amp;lt;a href=&amp;quot;https://twitter.com/GoHugoIO?ref_src=twsrc%5Etfw&amp;quot;&amp;gt;@GoHugoIO&amp;lt;/a&amp;gt; syntax highlighting &amp;lt;a href=&amp;quot;https://t.co/PBJAolNlDY&amp;quot;&amp;gt;https://t.co/PBJAolNlDY&amp;lt;/a&amp;gt; &amp;lt;a href=&amp;quot;https://t.co/2PXyY7l0dV&amp;quot;&amp;gt;pic.twitter.com/2PXyY7l0dV&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&amp;amp;mdash; Hugo Di Francesco (@hugo__df) &amp;lt;a href=&amp;quot;https://twitter.com/hugo__df/status/984699817531203584?ref_src=twsrc%5Etfw&amp;quot;&amp;gt;13 April 2018&amp;lt;/a&amp;gt;&amp;lt;/blockquote&amp;gt;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I tried a couple of times to enable it, it was meant to be as simple as putting the following in &lt;code&gt;config.toml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;nx&#34;&gt;pygmentsUseClassic&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;pygmentsCodefences&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;pygmentsUseClasses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This stumped me for months, finally it turns out I was doing this&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;pygmentsUseClassic&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;pygmentsCodefences&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;pygmentsUseClasses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Classic case of blinders being on.
As part of this process I got &lt;code&gt;highlight.js&lt;/code&gt; working, but in keeping with the “It’s a static site so pretty much nothing can go wrong” it felt a bit wrong to use a client-side library to highlight stuff.
Since syntax highlighting is done at build-time, no &lt;code&gt;highlight.js&lt;/code&gt; JS in &lt;code&gt;layouts/partials/js.html&lt;/code&gt; :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;c&#34;&gt;&amp;lt;!-- &amp;lt;script type=&amp;#34;text/javascript&amp;#34; src=&amp;#34;//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/highlight.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; --&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you want it to actually look nice we need to generate the &lt;code&gt;syntax.css&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;$ hugo gen chromastyles --style&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;monokai &amp;gt; ./static/syntax.css&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And hook it up in &lt;code&gt;config.toml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;customCSS&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;overrides.css&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;syntax.css&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;image-and-things&#34;&gt;Image and things 🤳&lt;/h2&gt;

&lt;h3 id=&#34;resize-using-imagemagick&#34;&gt;Resize using imagemagick&lt;/h3&gt;

&lt;p&gt;Create a &lt;code&gt;/static/img&lt;/code&gt; folder using:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;$ mkdir -p static/img&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then we can resize whatever image I’m going to use (usually for the post cover photos):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;$ convert my-image.jpg -resize 1500x1500 ./static/img/my-image.jpg&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;convert-png-to-jpg&#34;&gt;Convert PNG to JPG&lt;/h3&gt;

&lt;p&gt;I use Alchemy to convert from PNG to JPG &lt;a href=&#34;https://dawnlabs.io/alchemy/&#34;&gt;https://dawnlabs.io/alchemy/&lt;/a&gt;, although I thing ImageMagick can do it as well.&lt;/p&gt;

&lt;h2 id=&#34;deployment-and-more&#34;&gt;Deployment and more&lt;/h2&gt;

&lt;h3 id=&#34;deployment-script&#34;&gt;Deployment script&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;./scripts/deploy.sh&lt;/code&gt;, as taken from &lt;a href=&#34;https://gohugo.io/hosting-and-deployment/hosting-on-github/#put-it-into-a-script-1&#34;&gt;the Hugo docs&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; -e &lt;span class=&#34;s2&#34;&gt;&amp;#34;\033[0;32mDeploying updates to GitHub...\033[0m&amp;#34;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# Build the project.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;hugo &lt;span class=&#34;c1&#34;&gt;# if using a theme, replace with `hugo -t &amp;lt;YOURTHEME&amp;gt;`
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# Go To Public folder
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; public
&lt;span class=&#34;c1&#34;&gt;# Add changes to git.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;git add .
&lt;span class=&#34;c1&#34;&gt;# Commit changes.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;rebuilding site `date`&amp;#34;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$#&lt;/span&gt; -eq &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$msg&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# Push source and build repos.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;git push origin master
&lt;span class=&#34;c1&#34;&gt;# Come Back up to the Project Root
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ..&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;cleaning-up-with-node-and-npm-scripts&#34;&gt;“Cleaning up” with Node and npm scripts 🙄&lt;/h3&gt;

&lt;p&gt;This is the full &lt;code&gt;package.json&lt;/code&gt; (minus the stuff that&amp;rsquo;s not necessary):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;codewithhugo&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Repo for content of codewithhugo.com.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;config&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;syntax&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;static/syntax&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;overrides&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;static/overrides&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;images&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;static/img&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;scripts&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;build&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;concurrently --names \&amp;#34;SYNTAX,OVERRIDES,IMAGES\&amp;#34; -c \&amp;#34;bgBlue.bold,bgMagenta.bold,bgYellow.bold\&amp;#34; \&amp;#34;npm:build:css:syntax\&amp;#34; \&amp;#34;npm:build:css:overrides\&amp;#34; \&amp;#34;npm run build:imageoptim\&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;predeploy&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;npm run build&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;deploy&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;./scripts/deploy.sh&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;serve&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;./scripts/serve.sh&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;start&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;npm run dev&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;dev&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;concurrently --names \&amp;#34;CSS,HUGO\&amp;#34; -c \&amp;#34;bgBlue.bold,bgMagenta.bold\&amp;#34; \&amp;#34;npm:watch:css\&amp;#34; \&amp;#34;npm:serve\&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;watch:css&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;concurrently \&amp;#34;npm run build:css:syntax -- --watch --map inline\&amp;#34; \&amp;#34;npm run build:css:overrides -- --watch --map inline\&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;build:css:syntax&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;csso -i $npm_package_config_syntax.css -o $npm_package_config_syntax.min.css --stat&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;build:css:overrides&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;csso -i $npm_package_config_overrides.css -o $npm_package_config_overrides.min.css --stat&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;build:imageoptim&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;imageoptim $npm_package_config_images&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;author&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Hugo Di Francesco&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;homepage&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://github.com/HugoDF/codewithhugo#readme&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;devDependencies&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;concurrently&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;^3.6.0&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;csso-cli&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;^1.1.0&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;imageoptim-cli&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;^2.0.3&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let’s walk through what happens when I run &lt;code&gt;npm run deploy&lt;/code&gt;, these three tasks are the main ones:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;build&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;concurrently --names \&amp;#34;SYNTAX,OVERRIDES,IMAGES\&amp;#34; -c \&amp;#34;bgBlue.bold,bgMagenta.bold,bgYellow.bold\&amp;#34; \&amp;#34;npm:build:css:syntax\&amp;#34; \&amp;#34;npm:build:css:overrides\&amp;#34; \&amp;#34;npm run build:imageoptim\&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;predeploy&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;npm run build&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;deploy&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;./scripts/deploy.sh&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A feature of &lt;code&gt;npm&lt;/code&gt; is that if you have a script called &lt;code&gt;something&lt;/code&gt;  you can defined another script &lt;code&gt;presomething&lt;/code&gt; that will run before &lt;code&gt;something&lt;/code&gt; whenever it’s called.
So before deploying, we &lt;code&gt;npm run build&lt;/code&gt;.
&lt;code&gt;npm run build&lt;/code&gt; runs a couple of tasks in parallel with &lt;code&gt;concurrently&lt;/code&gt; (&lt;a href=&#34;https://www.npmjs.com/package/concurrently&#34;&gt;https://www.npmjs.com/package/concurrently&lt;/a&gt;):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;npm:build:css:syntax&lt;/code&gt; which is &lt;code&gt;concurrently&lt;/code&gt;-specific shorthand for &lt;code&gt;npm run build:css:syntax&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm:build:css:overrides&lt;/code&gt; which is &lt;code&gt;concurrently&lt;/code&gt;-specific shorthand for &lt;code&gt;npm run build:css:overrides&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm run build:imageoptim&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;minify-and-optimise-css&#34;&gt;Minify and optimise CSS&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;build:css:syntax&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;csso -i $npm_package_config_syntax.css -o $npm_package_config_syntax.min.css --stat&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;build:css:overrides&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;csso -i $npm_package_config_overrides.css -o $npm_package_config_overrides.min.css --stat&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;build:css:syntax&lt;/code&gt; and &lt;code&gt;build:css:overrides&lt;/code&gt; pretty much run the same command but on different files. Namely the files are &lt;code&gt;$npm_package_config_syntax.css&lt;/code&gt; and &lt;code&gt;$npm_package_config_overrides.css&lt;/code&gt; which interpolates npm_config syntax  and evaluate to &lt;code&gt;static/syntax.css&lt;/code&gt; and &lt;code&gt;static/overrides.css&lt;/code&gt; (see &lt;code&gt;config.syntax&lt;/code&gt; and &lt;code&gt;config.overrides&lt;/code&gt; in &lt;code&gt;package.json&lt;/code&gt;. We use &lt;a href=&#34;https://github.com/css/csso-cli&#34;&gt;https://github.com/css/csso-cli&lt;/a&gt;, which pretty much just minifies the CSS.&lt;/p&gt;

&lt;p&gt;The optimised CSS files get output as &lt;code&gt;static/syntax.min.css&lt;/code&gt; and &lt;code&gt;static/overrides.min.css&lt;/code&gt;, which I also update in the &lt;code&gt;config.toml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;customCSS&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;overrides.min.css&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;syntax.min.css&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;imageoptim&#34;&gt;Imageoptim&lt;/h4&gt;

&lt;p&gt;A similar approach is used for &lt;code&gt;build:imageoptim&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;build:imageoptim&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;imageoptim $npm_package_config_images&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It runs &lt;a href=&#34;https://github.com/JamieMason/ImageOptim-CLI&#34;&gt;imageoptim-cli&lt;/a&gt; on the contents of &lt;code&gt;$npm_package_config_images&lt;/code&gt; (which expands to &lt;code&gt;static/img&lt;/code&gt;).&lt;/p&gt;

&lt;h3 id=&#34;running-in-development-mode&#34;&gt;Running in development mode&lt;/h3&gt;

&lt;p&gt;Now that I’ve got a build step in place… the problem is that I need to watch for changes etc in development as well, which are the following scripts, from &lt;code&gt;package.json&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;serve&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;./scripts/serve.sh&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;start&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;npm run dev&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;dev&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;concurrently --names \&amp;#34;CSS,HUGO\&amp;#34; -c \&amp;#34;bgBlue.bold,bgMagenta.bold\&amp;#34; \&amp;#34;npm:watch:css\&amp;#34; \&amp;#34;npm:serve\&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;watch:css&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;concurrently \&amp;#34;npm run build:css:syntax -- --watch --map inline\&amp;#34; \&amp;#34;npm run build:css:overrides -- --watch --map inline\&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;./scripts/serve.sh&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;hugo serve . -F
&lt;span class=&#34;c1&#34;&gt;# -D will serve even draft posts
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;# -F will serve future posts&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I like not having to change the dates of my posts when they’re not ready to be published yet, so I use the &lt;code&gt;-F&lt;/code&gt; flag. If I don’t want a certain post to appear in development I’ll use &lt;code&gt;draft: true&lt;/code&gt; in the frontmatter.
&lt;code&gt;npm run dev&lt;/code&gt; just runs the &lt;code&gt;csso-cli&lt;/code&gt; tasks in watch mode as well as the Hugo dev server.&lt;/p&gt;

&lt;h1 id=&#34;getting-a-full-rss-feed&#34;&gt;Getting a full RSS feed 😄&lt;/h1&gt;

&lt;p&gt;The default Hugo RSS feed doesn’t have the full post contents, it just has the excerpt (what would display on the homepage tiles in my case).
The problem with that is… well that the RSS feed doesn’t have full post contents.
I knew it was a problem but as usual I never got round to fixing it until I embarrassed myself while promoting it 😄:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://d2mxuefqeaa7sj.cloudfront.net/s_3F94311F9467F8A3B0176D80603BB5F981B49B6D0E353DBB8DC8DC3DFEB48211_1533580523884_image.png&#34; alt=&#34;&amp;lt;blockquote&amp;gt;&amp;lt;p&amp;gt;If you have a blog and write/share useful things (big or small) about Web design / front-end dev and you provide an RSS feed to the blog, please respond to this tweet w/ the URL for it — I’d like to add more useful content feeds to my reader. 🙌🏻💃&amp;lt;/p&amp;gt;&amp;amp;mdash; Sara Soueidan (@SaraSoueidan) &amp;lt;a href=&amp;quot;https://twitter.com/SaraSoueidan/status/1020288178597613569?ref_src=twsrc%5Etfw&amp;quot;&amp;gt;20 July 2018&amp;lt;/a&amp;gt;&amp;lt;/blockquote&amp;gt;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;And my reply to that:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Hey there, I write at &lt;a href=&#34;https://t.co/tkBYwl47Q6&#34;&gt;https://codewithhugo.com&lt;/a&gt;, I don&amp;#39;t think the RSS feed I&amp;#39;ve got actually has the full posts though 🙈&lt;/p&gt;&amp;mdash; Hugo Di Francesco (@hugo__df) 21 July 2018&lt;/blockquote&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To fix that I found &lt;a href=&#34;https://randomgeekery.org/2017/09/15/full-content-hugo-feeds/&#34;&gt;https://randomgeekery.org/2017/09/15/full-content-hugo-feeds/&lt;/a&gt;, (where there’s a full explanation of what we’re doing). Essentially it boils down to creating the following
&lt;code&gt;layouts/_default/rss.xml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;rss&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;version=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;2.0&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns:atom=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://www.w3.org/2005/Atom&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;channel&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;{{ if eq  .Title  .Site.Title }}{{ .Site.Title }}{{ else }}{{ with .Title }}{{.}} on {{ end }}{{ .Site.Title }}{{ end }}&lt;span class=&#34;nt&#34;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;link&amp;gt;&lt;/span&gt;{{ .Permalink }}&lt;span class=&#34;nt&#34;&gt;&amp;lt;/link&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;Recent content {{ if ne  .Title  .Site.Title }}{{ with .Title }}in {{.}} {{ end }}{{ end }}on {{ .Site.Title }}&lt;span class=&#34;nt&#34;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;generator&amp;gt;&lt;/span&gt;Hugo -- gohugo.io&lt;span class=&#34;nt&#34;&gt;&amp;lt;/generator&amp;gt;&lt;/span&gt;{{ with .Site.LanguageCode }}
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;language&amp;gt;&lt;/span&gt;{{.}}&lt;span class=&#34;nt&#34;&gt;&amp;lt;/language&amp;gt;&lt;/span&gt;{{end}}{{ with .Site.Author.email }}
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;managingEditor&amp;gt;&lt;/span&gt;{{.}}{{ with $.Site.Author.name }} ({{.}}){{end}}&lt;span class=&#34;nt&#34;&gt;&amp;lt;/managingEditor&amp;gt;&lt;/span&gt;{{end}}{{ with .Site.Author.email }}
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;webMaster&amp;gt;&lt;/span&gt;{{.}}{{ with $.Site.Author.name }} ({{.}}){{end}}&lt;span class=&#34;nt&#34;&gt;&amp;lt;/webMaster&amp;gt;&lt;/span&gt;{{end}}{{ with .Site.Copyright }}
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;copyright&amp;gt;&lt;/span&gt;{{.}}&lt;span class=&#34;nt&#34;&gt;&amp;lt;/copyright&amp;gt;&lt;/span&gt;{{end}}{{ if not .Date.IsZero }}
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;lastBuildDate&amp;gt;&lt;/span&gt;{{ .Date.Format &amp;#34;Mon, 02 Jan 2006 15:04:05 -0700&amp;#34; | safeHTML }}&lt;span class=&#34;nt&#34;&gt;&amp;lt;/lastBuildDate&amp;gt;&lt;/span&gt;{{ end }}
    {{ with .OutputFormats.Get &amp;#34;RSS&amp;#34; }}
        {{ printf &amp;#34;&lt;span class=&#34;nt&#34;&gt;&amp;lt;atom:link&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;href=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;%q&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;rel=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;\&amp;#34;self\&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;%q&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;&amp;#34; .Permalink .MediaType | safeHTML }}
    {{ end }}
    {{ range .Pages }}
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;item&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;{{ .Title }}&lt;span class=&#34;nt&#34;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;link&amp;gt;&lt;/span&gt;{{ .Permalink }}&lt;span class=&#34;nt&#34;&gt;&amp;lt;/link&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;pubDate&amp;gt;&lt;/span&gt;{{ .Date.Format &amp;#34;Mon, 02 Jan 2006 15:04:05 -0700&amp;#34; | safeHTML }}&lt;span class=&#34;nt&#34;&gt;&amp;lt;/pubDate&amp;gt;&lt;/span&gt;
        {{ with .Site.Author.email }}&lt;span class=&#34;nt&#34;&gt;&amp;lt;author&amp;gt;&lt;/span&gt;{{.}}{{ with $.Site.Author.name }} ({{.}}){{end}}&lt;span class=&#34;nt&#34;&gt;&amp;lt;/author&amp;gt;&lt;/span&gt;{{end}}
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;guid&amp;gt;&lt;/span&gt;{{ .Permalink }}&lt;span class=&#34;nt&#34;&gt;&amp;lt;/guid&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;{{ .Content | html }}&lt;span class=&#34;nt&#34;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
    {{ end }}
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/channel&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/rss&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Which is just the default template except instead of:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;{{ .Summary | html }}&lt;span class=&#34;nt&#34;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We do:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;{{ .Content | html }}&lt;span class=&#34;nt&#34;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This make the built &lt;code&gt;index.xml&lt;/code&gt; file huge since it’s putting every post’s full contents, so again on &lt;a href=&#34;https://randomgeekery.org/2017/09/15/full-content-hugo-feeds/&#34;&gt;https://randomgeekery.org/2017/09/15/full-content-hugo-feeds/&lt;/a&gt;, I decided to limit the number of feed items to 15 (instead of 20 suggested in that post) that’s an update in &lt;code&gt;config.toml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;nx&#34;&gt;rssLimit&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Full credit for this to this post &lt;a href=&#34;https://randomgeekery.org/2017/09/15/full-content-hugo-feeds/&#34;&gt;https://randomgeekery.org/2017/09/15/full-content-hugo-feeds/&lt;/a&gt;, which actually explains the how and why of what has been done.&lt;/p&gt;

&lt;h2 id=&#34;cloudflare-setup&#34;&gt;Cloudflare setup&lt;/h2&gt;

&lt;p&gt;I flipped on a couple of settings, notably forcing HTTPS: Cloudflare Dashboard &amp;gt; Crypto &amp;gt; Always use HTTPS &amp;gt; On and in the same section Crypto &amp;gt; Automatic HTTPS Rewrites &amp;gt; On.&lt;/p&gt;

&lt;p&gt;I increased the Caching &amp;gt; Browser Cache Expiration to 8 days (could/should be more but I don’t want to have to version my assets) and switched on Caching &amp;gt; Always Online™ so that should GitHub Pages fall down, Cloudflare will still serve my content and all would be well.&lt;/p&gt;

&lt;p&gt;That’s pretty much all of my Hugo setup for &lt;a href=&#34;https://codewithhugo.com&#34;&gt;codewithhugo.com&lt;/a&gt; short of a couple of extra images and setting strings in &lt;code&gt;config.toml&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a style=&#34;background-color:black;color:white;text-decoration:none;padding:4px 6px;font-family:-apple-system, BlinkMacSystemFont, &amp;quot;San Francisco&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Ubuntu, Roboto, Noto, &amp;quot;Segoe UI&amp;quot;, Arial, sans-serif;font-size:12px;font-weight:bold;line-height:1.2;display:inline-block;border-radius:3px&#34; href=&#34;https://unsplash.com/@parkerkwhitson?utm_medium=referral&amp;amp;utm_campaign=photographer-credit&amp;amp;utm_content=creditBadge&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; title=&#34;Download free do whatever you want high-resolution photos from Parker Whitson&#34;&gt;&lt;span style=&#34;display:inline-block;padding:2px 3px&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; style=&#34;height:12px;width:auto;position:relative;vertical-align:middle;top:-1px;fill:white&#34; viewBox=&#34;0 0 32 32&#34;&gt;&lt;title&gt;unsplash-logo&lt;/title&gt;&lt;path d=&#34;M20.8 18.1c0 2.7-2.2 4.8-4.8 4.8s-4.8-2.1-4.8-4.8c0-2.7 2.2-4.8 4.8-4.8 2.7.1 4.8 2.2 4.8 4.8zm11.2-7.4v14.9c0 2.3-1.9 4.3-4.3 4.3h-23.4c-2.4 0-4.3-1.9-4.3-4.3v-15c0-2.3 1.9-4.3 4.3-4.3h3.7l.8-2.3c.4-1.1 1.7-2 2.9-2h8.6c1.2 0 2.5.9 2.9 2l.8 2.4h3.7c2.4 0 4.3 1.9 4.3 4.3zm-8.6 7.5c0-4.1-3.3-7.5-7.5-7.5-4.1 0-7.5 3.4-7.5 7.5s3.3 7.5 7.5 7.5c4.2-.1 7.5-3.4 7.5-7.5z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span style=&#34;display:inline-block;padding:2px 3px&#34;&gt;Parker Whitson&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>6 months of Code with Hugo, in numbers</title>
      <link>https://codewithhugo.com/6-months-of-code-with-hugo-in-numbers/</link>
      <pubDate>Sun, 21 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://codewithhugo.com/6-months-of-code-with-hugo-in-numbers/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Going from 0 to small. A developer&amp;rsquo;s journey starting a technical blog from scratch.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Stats in this post as of 21st of October, &lt;a href=&#34;https://twitter.com/hugo__df&#34;&gt;follow me on Twitter&lt;/a&gt; for monthly updates.&lt;/p&gt;

&lt;p&gt;Contents:
&lt;/p&gt;

&lt;h2 id=&#34;timeline&#34;&gt;Timeline&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;First commit&lt;/strong&gt;: 10th of March 2018&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://d2mxuefqeaa7sj.cloudfront.net/s_12BC44EFC445B39435F24188DC09E3523F5F0BB39541BE515F4AE118481862F4_1540125428049_image.png&#34; alt=&#34;First commit to the Code with Hugo repository&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;First post&lt;/strong&gt;: &lt;a href=&#34;https://codewithhugo.com/avoiding-falsy-values-in-javascript-arrays/&#34;&gt;Avoiding falsy values in JavaScript&lt;/a&gt;, &lt;em&gt;published 10th of April 2018&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://d2mxuefqeaa7sj.cloudfront.net/s_12BC44EFC445B39435F24188DC09E3523F5F0BB39541BE515F4AE118481862F4_1540125423109_image.png&#34; alt=&#34;First post on Code with Hugo repository&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6 month date&lt;/strong&gt;: 11th of October&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Days&lt;/strong&gt;: 183 days (for the 6-month date)&lt;/p&gt;

&lt;h2 id=&#34;post-count-total-word-and-read-time&#34;&gt;Post count, total word and read time&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Posts&lt;/strong&gt;: 35 (36 since this is published, live stats at &lt;a href=&#34;https://beta.observablehq.com/@hugodf/code-with-hugo-posts&#34;&gt;https://beta.observablehq.com/@hugodf/code-with-hugo-posts&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Total Words&lt;/strong&gt;: 32,900&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;output of : &lt;code&gt;cat content/post/2018-{04,05,06,07,08,09,10,11,12}-* | wc -w&lt;/code&gt; in the Hugo root directory&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Total reading time&lt;/strong&gt;: 110 minutes, 1h 50min&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mean post reading time&lt;/strong&gt;: 3.02 minutes&lt;/p&gt;

&lt;h2 id=&#34;top-visited&#34;&gt;Top visited&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://codewithhugo.com/how-to-make-beautiful-simple-cli-apps-with-node/&#34;&gt;How to make beautiful, simple CLI apps with Node&lt;/a&gt;, &lt;em&gt;published 20th of June 2018&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://codewithhugo.com/how-components-won-the-framework-wars/&#34;&gt;How components won the frameworks wars&lt;/a&gt;, &lt;em&gt;published 22nd of April 2018&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://codewithhugo.com/using-es6-classes-for-sequelize-4-models/&#34;&gt;Using ES6 classes for Sequelize 4 models&lt;/a&gt;, &lt;em&gt;published 9th of May 2018&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://codewithhugo.com/testing-an-express-app-with-supertest-moxios-and-jest/&#34;&gt;Testing an Express app with Supertest, moxios and Jest&lt;/a&gt;, &lt;em&gt;published 27th of June 2018&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://codewithhugo.com/setting-up-express-and-redis-with-docker-compose/&#34;&gt;Setting up Express and Redis with Docker Compose&lt;/a&gt;, &lt;em&gt;published 6th of June 2018&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://codewithhugo.com/javascript-graphql-client-requests-in-node-and-the-browser-using-graphql.js/&#34;&gt;JavaScript GraphQL Client Requests in Node and the browser using graphql.js&lt;/a&gt;, &lt;em&gt;published 5th of September 2018&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://codewithhugo.com&#34;&gt;Homepage, codewithhugo.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://codewithhugo.com/change-the-date-of-a-git-commit/&#34;&gt;Change the date of a git commit&lt;/a&gt;, &lt;em&gt;published 29th of August 2018&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://codewithhugo.com/mocking-the-current-date-in-jest-tests/&#34;&gt;Mocking the current Date in Jest tests&lt;/a&gt;, &lt;em&gt;published 7th of July 2018&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://codewithhugo.com/a-gentle-introduction-to-graphql-api-integrations/&#34;&gt;A gentle introduction to GraphQL API integrations&lt;/a&gt;, &lt;em&gt;published 10th of September 2018&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&#34;https://d2mxuefqeaa7sj.cloudfront.net/s_12BC44EFC445B39435F24188DC09E3523F5F0BB39541BE515F4AE118481862F4_1540124344695_image.png&#34; alt=&#34;Top 10 posts for pageviews after 6 months&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;top-day-analytics-and-search-traffic-data&#34;&gt;Top day, analytics and search traffic data&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Top Day&lt;/strong&gt;: 23rd of April, 2,622 page views&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://codewithhugo.com/how-to-make-beautiful-simple-cli-apps-with-node/&#34;&gt;How to make beautiful, simple CLI apps with Node&lt;/a&gt; got pretty high on &lt;a href=&#34;http://reddit.com/r/node&#34;&gt;&lt;code&gt;/r/node&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://d2mxuefqeaa7sj.cloudfront.net/s_12BC44EFC445B39435F24188DC09E3523F5F0BB39541BE515F4AE118481862F4_1540124269010_image.png&#34; alt=&#34;Google Analytics after 6 months&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Search traffic for the last 6 months (as of 21st of October 2018):&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://d2mxuefqeaa7sj.cloudfront.net/s_12BC44EFC445B39435F24188DC09E3523F5F0BB39541BE515F4AE118481862F4_1540124214742_image.png&#34; alt=&#34;Search traffic graph after 6 months&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;highlights&#34;&gt;Highlights&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Getting onto &lt;a href=&#34;https://nodeweekly.com/&#34;&gt;Node Weekly&lt;/a&gt;, &lt;a href=&#34;https://javascriptweekly.com/&#34;&gt;JavaScript Weekly&lt;/a&gt;, &lt;a href=&#34;https://vuejsfeed.com/&#34;&gt;Vue.js feed&lt;/a&gt;, &lt;a href=&#34;https://graphqlweekly.com/&#34;&gt;GraphQL Weekly&lt;/a&gt;, thanks for all the work put into curating top content (and deeming some of mine was).&lt;/li&gt;
&lt;li&gt;Becoming a writer for freeCodeCamp and The Startup, on top of a HackerNoon and Codeburst contributor&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;newsletter-dev-to-and-twitter&#34;&gt;Newsletter, dev.to and Twitter&lt;/h2&gt;

&lt;p&gt;Newsletter:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Subscribes&lt;/strong&gt;: 72&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Unsubscribes&lt;/strong&gt;: 4&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;dev.to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Followers:&lt;/strong&gt; 2,811&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;code-and-example-repositories&#34;&gt;Code and example repositories&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Repositories count&lt;/strong&gt;: 11&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In order of appearance:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/HugoDF/express-redis-docker&#34;&gt;github.com/HugoDF/express-redis-docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/HugoDF/fix-package-lock&#34;&gt;github.com/HugoDF/fix-package-lock&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/HugoDF/express-supertest-moxios&#34;&gt;github.com/HugoDF/express-supertest-moxios&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/HugoDF/express-bull-es6&#34;&gt;github.com/HugoDF/express-bull-es6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/HugoDF/snapshot-everything&#34;&gt;github.com/HugoDF/snapshot-everything&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/HugoDF/python-graphql-client-example&#34;&gt;github.com/HugoDF/python-graphql-client-example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/HugoDF/js-graphql-client-example&#34;&gt;github.com/HugoDF/js-graphql-client-example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/HugoDF/parcel-gh-pages-deploy&#34;&gt;github.com/HugoDF/parcel-gh-pages-deploy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/HugoDF/vue-multiple-components-in-sfc&#34;&gt;github.com/HugoDF/vue-multiple-components-in-sfc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/HugoDF/wait-for-pg&#34;&gt;github.com/HugoDF/wait-for-pg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/HugoDF/micro-vs-express-example&#34;&gt;github.com/HugoDF/micro-vs-express-example&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;Extracted using: &lt;code&gt;cat content/post/2018-{04,05,06,07,08,09,10,11,12}-* | grep &amp;quot;https://github.com/HugoDF/&amp;quot;&lt;/code&gt; followed by manual cleaning 🙂&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;revenue&#34;&gt;Revenue&lt;/h2&gt;

&lt;p&gt;👌, a big fat &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m working on &lt;a href=&#34;https://accountableblogging.com&#34;&gt;Accountable Blogging&lt;/a&gt; and a Sequelize cheat sheet so &lt;a href=&#34;https://buttondown.email/hugo&#34;&gt;subscribe to the newsletter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Again, stats and data in this post as of 21st of October, &lt;a href=&#34;https://twitter.com/hugo__df&#34;&gt;follow me on Twitter&lt;/a&gt; for monthly updates.&lt;/p&gt;

&lt;p&gt;&lt;a style=&#34;background-color:black;color:white;text-decoration:none;padding:4px 6px;font-family:-apple-system, BlinkMacSystemFont, &amp;quot;San Francisco&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Ubuntu, Roboto, Noto, &amp;quot;Segoe UI&amp;quot;, Arial, sans-serif;font-size:12px;font-weight:bold;line-height:1.2;display:inline-block;border-radius:3px&#34; href=&#34;https://unsplash.com/@srd844?utm_medium=referral&amp;amp;utm_campaign=photographer-credit&amp;amp;utm_content=creditBadge&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; title=&#34;Download free do whatever you want high-resolution photos from Stephen Dawson&#34;&gt;&lt;span style=&#34;display:inline-block;padding:2px 3px&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; style=&#34;height:12px;width:auto;position:relative;vertical-align:middle;top:-1px;fill:white&#34; viewBox=&#34;0 0 32 32&#34;&gt;&lt;title&gt;unsplash-logo&lt;/title&gt;&lt;path d=&#34;M20.8 18.1c0 2.7-2.2 4.8-4.8 4.8s-4.8-2.1-4.8-4.8c0-2.7 2.2-4.8 4.8-4.8 2.7.1 4.8 2.2 4.8 4.8zm11.2-7.4v14.9c0 2.3-1.9 4.3-4.3 4.3h-23.4c-2.4 0-4.3-1.9-4.3-4.3v-15c0-2.3 1.9-4.3 4.3-4.3h3.7l.8-2.3c.4-1.1 1.7-2 2.9-2h8.6c1.2 0 2.5.9 2.9 2l.8 2.4h3.7c2.4 0 4.3 1.9 4.3 4.3zm-8.6 7.5c0-4.1-3.3-7.5-7.5-7.5-4.1 0-7.5 3.4-7.5 7.5s3.3 7.5 7.5 7.5c4.2-.1 7.5-3.4 7.5-7.5z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span style=&#34;display:inline-block;padding:2px 3px&#34;&gt;Stephen Dawson&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
