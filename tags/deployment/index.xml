<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Deployment on Code with Hugo</title>
    <link>https://codewithhugo.com/tags/deployment/</link>
    <description>Recent content in Deployment on Code with Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Fri, 02 Nov 2018 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://codewithhugo.com/tags/deployment/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Switching the lights on: Hugo vs Hugo config files</title>
      <link>https://codewithhugo.com/switching-the-lights-on-hugo-vs-hugo-config-files/</link>
      <pubDate>Fri, 17 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://codewithhugo.com/switching-the-lights-on-hugo-vs-hugo-config-files/</guid>
      <description>

&lt;blockquote&gt;
&lt;p&gt;A simple Hugo blog setup&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The story of getting &lt;a href=&#34;https://codewithhugo.com&#34;&gt;codewithhugo.com&lt;/a&gt; up and running.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;tl;dr&lt;/strong&gt; is the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I always rave about my blog setup, it’s simple, fast and just works&lt;/li&gt;
&lt;li&gt;I used &lt;a href=&#34;http://gohugo.io&#34;&gt;Hugo&lt;/a&gt;, “The world’s fastest framework for building websites”, a static site generator&lt;/li&gt;
&lt;li&gt;I used a theme, &lt;a href=&#34;https://github.com/eueung/hugo-casper-two&#34;&gt;casper-two&lt;/a&gt;, which is a Hugo port of the &lt;a href=&#34;https://ghost.org/&#34;&gt;https://ghost.org/&lt;/a&gt; default theme&lt;/li&gt;
&lt;li&gt;I deployed to GitHub pages behind Cloudflare *.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There&amp;rsquo;s been an update in the deployment saga, read it here: &lt;a href=&#34;https://codewithhugo.com/a-tiny-case-study-about-migrating-to-netlify-when-disaster-strikes-at-github-featuring-cloudflare/&#34;&gt;&amp;ldquo;A tiny case study about migrating to Netlify when disaster strikes at GitHub, featuring Cloudflare&amp;rdquo;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This was sent out on the &lt;a href=&#34;https://buttondown.email/hugo&#34;&gt;Code with Hugo newsletter&lt;/a&gt; last Monday.
&lt;a href=&#34;https://buttondown.email/hugo&#34;&gt;Subscribe&lt;/a&gt; to get the latest posts right in your inbox (before anyone else).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#why-i-didn-t-build-my-own-website&#34;&gt;Why I didn’t build my own website 🏃‍♂️&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#picking-a-theme-and-overriding-little-things&#34;&gt;Picking a theme and overriding little things 🖼&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#enabling-syntax-highlighting&#34;&gt;Enabling syntax highlighting 🎨&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#image-and-things&#34;&gt;Image and things 🤳&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#resize-using-imagemagick&#34;&gt;Resize using imagemagick&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#convert-png-to-jpg&#34;&gt;Convert PNG to JPG&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#deployment-and-more&#34;&gt;Deployment and more&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#deployment-script&#34;&gt;Deployment script&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#cleaning-up-with-node-and-npm-scripts&#34;&gt;“Cleaning up” with Node and npm scripts 🙄&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#minify-and-optimise-css&#34;&gt;Minify and optimise CSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#imageoptim&#34;&gt;Imageoptim&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#running-in-development-mode&#34;&gt;Running in development mode&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#cloudflare-setup&#34;&gt;Cloudflare setup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!--
- [Getting a full RSS feed 😄](#getting-a-full-rss-feed-)
  - [Cloudflare setup](#cloudflare-setup)
--&gt;

&lt;h2 id=&#34;why-i-didn-t-build-my-own-website&#34;&gt;Why I didn’t build my own website 🏃‍♂️&lt;/h2&gt;

&lt;p&gt;I’m not a designer, and Code with Hugo wasn’t about me learning or showing off my website-making skills, it was about writing content consistently.
That’s why I used a template, Hugo and GitHub pages. It’s a static site with a CDN (Cloudflare) in front so pretty much nothing can go wrong. That means I &lt;em&gt;have&lt;/em&gt; to focus on the content.&lt;/p&gt;

&lt;h2 id=&#34;picking-a-theme-and-overriding-little-things&#34;&gt;Picking a theme and overriding little things 🖼&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/eueung/hugo-casper-two&#34;&gt;Casper Two&lt;/a&gt;, the &lt;a href=&#34;https://ghost.org&#34;&gt;ghost.org&lt;/a&gt; default theme is awesome.
I tweaked a couple of things, as you can see in my &lt;code&gt;static/overrides.css&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;site-title&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;font-weight&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;font-size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;rem&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;collection-title&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;text-transform&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;uppercase&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;font-size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;rem&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;font-weight&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;300&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;site-header&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nd&#34;&gt;before&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;background&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;rgba&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;//&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;This&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;was&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;only&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;needed&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;when&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;I&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;enabled&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;pygments&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;syntax&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;highlighting&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;site-wrapper&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;min-height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;auto&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;highlight&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Adding that stuff in &lt;code&gt;config.toml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;customCSS&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;overrides.css&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That’s all the CSS I wrote 🙂 .&lt;/p&gt;

&lt;h2 id=&#34;enabling-syntax-highlighting&#34;&gt;Enabling syntax highlighting 🎨&lt;/h2&gt;

&lt;p&gt;codewithhugo.com didn’t have syntax highlighting for a while, 😕 and I even started whining.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://d2mxuefqeaa7sj.cloudfront.net/s_3F94311F9467F8A3B0176D80603BB5F981B49B6D0E353DBB8DC8DC3DFEB48211_1533578484452_image.png&#34; alt=&#34;&amp;lt;blockquote&amp;gt;&amp;lt;p&amp;gt;When &amp;lt;a href=&amp;quot;https://twitter.com/ThePracticalDev?ref_src=twsrc%5Etfw&amp;quot;&amp;gt;@ThePracticalDev&amp;lt;/a&amp;gt; has better syntax highlighting than your blog 😂😂 does anyone  know how to sort out &amp;lt;a href=&amp;quot;https://twitter.com/GoHugoIO?ref_src=twsrc%5Etfw&amp;quot;&amp;gt;@GoHugoIO&amp;lt;/a&amp;gt; syntax highlighting &amp;lt;a href=&amp;quot;https://t.co/PBJAolNlDY&amp;quot;&amp;gt;https://t.co/PBJAolNlDY&amp;lt;/a&amp;gt; &amp;lt;a href=&amp;quot;https://t.co/2PXyY7l0dV&amp;quot;&amp;gt;pic.twitter.com/2PXyY7l0dV&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&amp;amp;mdash; Hugo Di Francesco (@hugo__df) &amp;lt;a href=&amp;quot;https://twitter.com/hugo__df/status/984699817531203584?ref_src=twsrc%5Etfw&amp;quot;&amp;gt;13 April 2018&amp;lt;/a&amp;gt;&amp;lt;/blockquote&amp;gt;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I tried a couple of times to enable it, it was meant to be as simple as putting the following in &lt;code&gt;config.toml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;nx&#34;&gt;pygmentsUseClassic&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;pygmentsCodefences&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;pygmentsUseClasses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This stumped me for months, finally it turns out I was doing this&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;pygmentsUseClassic&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;pygmentsCodefences&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;pygmentsUseClasses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Classic case of blinders being on.
As part of this process I got &lt;code&gt;highlight.js&lt;/code&gt; working, but in keeping with the “It’s a static site so pretty much nothing can go wrong” it felt a bit wrong to use a client-side library to highlight stuff.
Since syntax highlighting is done at build-time, no &lt;code&gt;highlight.js&lt;/code&gt; JS in &lt;code&gt;layouts/partials/js.html&lt;/code&gt; :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;c&#34;&gt;&amp;lt;!-- &amp;lt;script type=&amp;#34;text/javascript&amp;#34; src=&amp;#34;//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/highlight.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; --&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you want it to actually look nice we need to generate the &lt;code&gt;syntax.css&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;$ hugo gen chromastyles --style&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;monokai &amp;gt; ./static/syntax.css&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And hook it up in &lt;code&gt;config.toml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;customCSS&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;overrides.css&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;syntax.css&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;image-and-things&#34;&gt;Image and things 🤳&lt;/h2&gt;

&lt;h3 id=&#34;resize-using-imagemagick&#34;&gt;Resize using imagemagick&lt;/h3&gt;

&lt;p&gt;Create a &lt;code&gt;/static/img&lt;/code&gt; folder using:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;$ mkdir -p static/img&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then we can resize whatever image I’m going to use (usually for the post cover photos):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;$ convert my-image.jpg -resize 1500x1500 ./static/img/my-image.jpg&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;convert-png-to-jpg&#34;&gt;Convert PNG to JPG&lt;/h3&gt;

&lt;p&gt;I use Alchemy to convert from PNG to JPG &lt;a href=&#34;https://dawnlabs.io/alchemy/&#34;&gt;https://dawnlabs.io/alchemy/&lt;/a&gt;, although I thing ImageMagick can do it as well.&lt;/p&gt;

&lt;h2 id=&#34;deployment-and-more&#34;&gt;Deployment and more&lt;/h2&gt;

&lt;h3 id=&#34;deployment-script&#34;&gt;Deployment script&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;./scripts/deploy.sh&lt;/code&gt;, as taken from &lt;a href=&#34;https://gohugo.io/hosting-and-deployment/hosting-on-github/#put-it-into-a-script-1&#34;&gt;the Hugo docs&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; -e &lt;span class=&#34;s2&#34;&gt;&amp;#34;\033[0;32mDeploying updates to GitHub...\033[0m&amp;#34;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# Build the project.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;hugo &lt;span class=&#34;c1&#34;&gt;# if using a theme, replace with `hugo -t &amp;lt;YOURTHEME&amp;gt;`
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# Go To Public folder
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; public
&lt;span class=&#34;c1&#34;&gt;# Add changes to git.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;git add .
&lt;span class=&#34;c1&#34;&gt;# Commit changes.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;rebuilding site `date`&amp;#34;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$#&lt;/span&gt; -eq &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$msg&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# Push source and build repos.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;git push origin master
&lt;span class=&#34;c1&#34;&gt;# Come Back up to the Project Root
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ..&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;cleaning-up-with-node-and-npm-scripts&#34;&gt;“Cleaning up” with Node and npm scripts 🙄&lt;/h3&gt;

&lt;p&gt;This is the full &lt;code&gt;package.json&lt;/code&gt; (minus the stuff that&amp;rsquo;s not necessary):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;codewithhugo&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Repo for content of codewithhugo.com.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;config&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;syntax&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;static/syntax&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;overrides&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;static/overrides&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;images&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;static/img&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;scripts&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;build&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;concurrently --names \&amp;#34;SYNTAX,OVERRIDES,IMAGES\&amp;#34; -c \&amp;#34;bgBlue.bold,bgMagenta.bold,bgYellow.bold\&amp;#34; \&amp;#34;npm:build:css:syntax\&amp;#34; \&amp;#34;npm:build:css:overrides\&amp;#34; \&amp;#34;npm run build:imageoptim\&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;predeploy&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;npm run build&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;deploy&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;./scripts/deploy.sh&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;serve&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;./scripts/serve.sh&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;start&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;npm run dev&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;dev&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;concurrently --names \&amp;#34;CSS,HUGO\&amp;#34; -c \&amp;#34;bgBlue.bold,bgMagenta.bold\&amp;#34; \&amp;#34;npm:watch:css\&amp;#34; \&amp;#34;npm:serve\&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;watch:css&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;concurrently \&amp;#34;npm run build:css:syntax -- --watch --map inline\&amp;#34; \&amp;#34;npm run build:css:overrides -- --watch --map inline\&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;build:css:syntax&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;csso -i $npm_package_config_syntax.css -o $npm_package_config_syntax.min.css --stat&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;build:css:overrides&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;csso -i $npm_package_config_overrides.css -o $npm_package_config_overrides.min.css --stat&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;build:imageoptim&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;imageoptim $npm_package_config_images&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;author&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Hugo Di Francesco&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;homepage&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://github.com/HugoDF/codewithhugo#readme&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;devDependencies&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;concurrently&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;^3.6.0&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;csso-cli&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;^1.1.0&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;imageoptim-cli&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;^2.0.3&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let’s walk through what happens when I run &lt;code&gt;npm run deploy&lt;/code&gt;, these three tasks are the main ones:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;build&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;concurrently --names \&amp;#34;SYNTAX,OVERRIDES,IMAGES\&amp;#34; -c \&amp;#34;bgBlue.bold,bgMagenta.bold,bgYellow.bold\&amp;#34; \&amp;#34;npm:build:css:syntax\&amp;#34; \&amp;#34;npm:build:css:overrides\&amp;#34; \&amp;#34;npm run build:imageoptim\&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;predeploy&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;npm run build&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;deploy&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;./scripts/deploy.sh&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A feature of &lt;code&gt;npm&lt;/code&gt; is that if you have a script called &lt;code&gt;something&lt;/code&gt;  you can defined another script &lt;code&gt;presomething&lt;/code&gt; that will run before &lt;code&gt;something&lt;/code&gt; whenever it’s called.
So before deploying, we &lt;code&gt;npm run build&lt;/code&gt;.
&lt;code&gt;npm run build&lt;/code&gt; runs a couple of tasks in parallel with &lt;code&gt;concurrently&lt;/code&gt; (&lt;a href=&#34;https://www.npmjs.com/package/concurrently&#34;&gt;https://www.npmjs.com/package/concurrently&lt;/a&gt;):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;npm:build:css:syntax&lt;/code&gt; which is &lt;code&gt;concurrently&lt;/code&gt;-specific shorthand for &lt;code&gt;npm run build:css:syntax&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm:build:css:overrides&lt;/code&gt; which is &lt;code&gt;concurrently&lt;/code&gt;-specific shorthand for &lt;code&gt;npm run build:css:overrides&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm run build:imageoptim&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;minify-and-optimise-css&#34;&gt;Minify and optimise CSS&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;build:css:syntax&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;csso -i $npm_package_config_syntax.css -o $npm_package_config_syntax.min.css --stat&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;build:css:overrides&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;csso -i $npm_package_config_overrides.css -o $npm_package_config_overrides.min.css --stat&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;build:css:syntax&lt;/code&gt; and &lt;code&gt;build:css:overrides&lt;/code&gt; pretty much run the same command but on different files. Namely the files are &lt;code&gt;$npm_package_config_syntax.css&lt;/code&gt; and &lt;code&gt;$npm_package_config_overrides.css&lt;/code&gt; which interpolates npm_config syntax  and evaluate to &lt;code&gt;static/syntax.css&lt;/code&gt; and &lt;code&gt;static/overrides.css&lt;/code&gt; (see &lt;code&gt;config.syntax&lt;/code&gt; and &lt;code&gt;config.overrides&lt;/code&gt; in &lt;code&gt;package.json&lt;/code&gt;. We use &lt;a href=&#34;https://github.com/css/csso-cli&#34;&gt;https://github.com/css/csso-cli&lt;/a&gt;, which pretty much just minifies the CSS.&lt;/p&gt;

&lt;p&gt;The optimised CSS files get output as &lt;code&gt;static/syntax.min.css&lt;/code&gt; and &lt;code&gt;static/overrides.min.css&lt;/code&gt;, which I also update in the &lt;code&gt;config.toml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;customCSS&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;overrides.min.css&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;syntax.min.css&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;imageoptim&#34;&gt;Imageoptim&lt;/h4&gt;

&lt;p&gt;A similar approach is used for &lt;code&gt;build:imageoptim&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;build:imageoptim&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;imageoptim $npm_package_config_images&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It runs &lt;a href=&#34;https://github.com/JamieMason/ImageOptim-CLI&#34;&gt;imageoptim-cli&lt;/a&gt; on the contents of &lt;code&gt;$npm_package_config_images&lt;/code&gt; (which expands to &lt;code&gt;static/img&lt;/code&gt;).&lt;/p&gt;

&lt;h3 id=&#34;running-in-development-mode&#34;&gt;Running in development mode&lt;/h3&gt;

&lt;p&gt;Now that I’ve got a build step in place… the problem is that I need to watch for changes etc in development as well, which are the following scripts, from &lt;code&gt;package.json&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;serve&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;./scripts/serve.sh&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;start&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;npm run dev&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;dev&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;concurrently --names \&amp;#34;CSS,HUGO\&amp;#34; -c \&amp;#34;bgBlue.bold,bgMagenta.bold\&amp;#34; \&amp;#34;npm:watch:css\&amp;#34; \&amp;#34;npm:serve\&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;watch:css&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;concurrently \&amp;#34;npm run build:css:syntax -- --watch --map inline\&amp;#34; \&amp;#34;npm run build:css:overrides -- --watch --map inline\&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;./scripts/serve.sh&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;hugo serve . -F
&lt;span class=&#34;c1&#34;&gt;# -D will serve even draft posts
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;# -F will serve future posts&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I like not having to change the dates of my posts when they’re not ready to be published yet, so I use the &lt;code&gt;-F&lt;/code&gt; flag. If I don’t want a certain post to appear in development I’ll use &lt;code&gt;draft: true&lt;/code&gt; in the frontmatter.
&lt;code&gt;npm run dev&lt;/code&gt; just runs the &lt;code&gt;csso-cli&lt;/code&gt; tasks in watch mode as well as the Hugo dev server.&lt;/p&gt;

&lt;h1 id=&#34;getting-a-full-rss-feed&#34;&gt;Getting a full RSS feed 😄&lt;/h1&gt;

&lt;p&gt;The default Hugo RSS feed doesn’t have the full post contents, it just has the excerpt (what would display on the homepage tiles in my case).
The problem with that is… well that the RSS feed doesn’t have full post contents.
I knew it was a problem but as usual I never got round to fixing it until I embarrassed myself while promoting it 😄:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://d2mxuefqeaa7sj.cloudfront.net/s_3F94311F9467F8A3B0176D80603BB5F981B49B6D0E353DBB8DC8DC3DFEB48211_1533580523884_image.png&#34; alt=&#34;&amp;lt;blockquote&amp;gt;&amp;lt;p&amp;gt;If you have a blog and write/share useful things (big or small) about Web design / front-end dev and you provide an RSS feed to the blog, please respond to this tweet w/ the URL for it — I’d like to add more useful content feeds to my reader. 🙌🏻💃&amp;lt;/p&amp;gt;&amp;amp;mdash; Sara Soueidan (@SaraSoueidan) &amp;lt;a href=&amp;quot;https://twitter.com/SaraSoueidan/status/1020288178597613569?ref_src=twsrc%5Etfw&amp;quot;&amp;gt;20 July 2018&amp;lt;/a&amp;gt;&amp;lt;/blockquote&amp;gt;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;And my reply to that:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Hey there, I write at &lt;a href=&#34;https://t.co/tkBYwl47Q6&#34;&gt;https://codewithhugo.com&lt;/a&gt;, I don&amp;#39;t think the RSS feed I&amp;#39;ve got actually has the full posts though 🙈&lt;/p&gt;&amp;mdash; Hugo Di Francesco (@hugo__df) 21 July 2018&lt;/blockquote&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To fix that I found &lt;a href=&#34;https://randomgeekery.org/2017/09/15/full-content-hugo-feeds/&#34;&gt;https://randomgeekery.org/2017/09/15/full-content-hugo-feeds/&lt;/a&gt;, (where there’s a full explanation of what we’re doing). Essentially it boils down to creating the following
&lt;code&gt;layouts/_default/rss.xml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;rss&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;version=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;2.0&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns:atom=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://www.w3.org/2005/Atom&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;channel&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;{{ if eq  .Title  .Site.Title }}{{ .Site.Title }}{{ else }}{{ with .Title }}{{.}} on {{ end }}{{ .Site.Title }}{{ end }}&lt;span class=&#34;nt&#34;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;link&amp;gt;&lt;/span&gt;{{ .Permalink }}&lt;span class=&#34;nt&#34;&gt;&amp;lt;/link&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;Recent content {{ if ne  .Title  .Site.Title }}{{ with .Title }}in {{.}} {{ end }}{{ end }}on {{ .Site.Title }}&lt;span class=&#34;nt&#34;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;generator&amp;gt;&lt;/span&gt;Hugo -- gohugo.io&lt;span class=&#34;nt&#34;&gt;&amp;lt;/generator&amp;gt;&lt;/span&gt;{{ with .Site.LanguageCode }}
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;language&amp;gt;&lt;/span&gt;{{.}}&lt;span class=&#34;nt&#34;&gt;&amp;lt;/language&amp;gt;&lt;/span&gt;{{end}}{{ with .Site.Author.email }}
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;managingEditor&amp;gt;&lt;/span&gt;{{.}}{{ with $.Site.Author.name }} ({{.}}){{end}}&lt;span class=&#34;nt&#34;&gt;&amp;lt;/managingEditor&amp;gt;&lt;/span&gt;{{end}}{{ with .Site.Author.email }}
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;webMaster&amp;gt;&lt;/span&gt;{{.}}{{ with $.Site.Author.name }} ({{.}}){{end}}&lt;span class=&#34;nt&#34;&gt;&amp;lt;/webMaster&amp;gt;&lt;/span&gt;{{end}}{{ with .Site.Copyright }}
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;copyright&amp;gt;&lt;/span&gt;{{.}}&lt;span class=&#34;nt&#34;&gt;&amp;lt;/copyright&amp;gt;&lt;/span&gt;{{end}}{{ if not .Date.IsZero }}
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;lastBuildDate&amp;gt;&lt;/span&gt;{{ .Date.Format &amp;#34;Mon, 02 Jan 2006 15:04:05 -0700&amp;#34; | safeHTML }}&lt;span class=&#34;nt&#34;&gt;&amp;lt;/lastBuildDate&amp;gt;&lt;/span&gt;{{ end }}
    {{ with .OutputFormats.Get &amp;#34;RSS&amp;#34; }}
        {{ printf &amp;#34;&lt;span class=&#34;nt&#34;&gt;&amp;lt;atom:link&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;href=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;%q&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;rel=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;\&amp;#34;self\&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;%q&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;&amp;#34; .Permalink .MediaType | safeHTML }}
    {{ end }}
    {{ range .Pages }}
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;item&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;{{ .Title }}&lt;span class=&#34;nt&#34;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;link&amp;gt;&lt;/span&gt;{{ .Permalink }}&lt;span class=&#34;nt&#34;&gt;&amp;lt;/link&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;pubDate&amp;gt;&lt;/span&gt;{{ .Date.Format &amp;#34;Mon, 02 Jan 2006 15:04:05 -0700&amp;#34; | safeHTML }}&lt;span class=&#34;nt&#34;&gt;&amp;lt;/pubDate&amp;gt;&lt;/span&gt;
        {{ with .Site.Author.email }}&lt;span class=&#34;nt&#34;&gt;&amp;lt;author&amp;gt;&lt;/span&gt;{{.}}{{ with $.Site.Author.name }} ({{.}}){{end}}&lt;span class=&#34;nt&#34;&gt;&amp;lt;/author&amp;gt;&lt;/span&gt;{{end}}
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;guid&amp;gt;&lt;/span&gt;{{ .Permalink }}&lt;span class=&#34;nt&#34;&gt;&amp;lt;/guid&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;{{ .Content | html }}&lt;span class=&#34;nt&#34;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
    {{ end }}
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/channel&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/rss&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Which is just the default template except instead of:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;{{ .Summary | html }}&lt;span class=&#34;nt&#34;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We do:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;{{ .Content | html }}&lt;span class=&#34;nt&#34;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This make the built &lt;code&gt;index.xml&lt;/code&gt; file huge since it’s putting every post’s full contents, so again on &lt;a href=&#34;https://randomgeekery.org/2017/09/15/full-content-hugo-feeds/&#34;&gt;https://randomgeekery.org/2017/09/15/full-content-hugo-feeds/&lt;/a&gt;, I decided to limit the number of feed items to 15 (instead of 20 suggested in that post) that’s an update in &lt;code&gt;config.toml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;nx&#34;&gt;rssLimit&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Full credit for this to this post &lt;a href=&#34;https://randomgeekery.org/2017/09/15/full-content-hugo-feeds/&#34;&gt;https://randomgeekery.org/2017/09/15/full-content-hugo-feeds/&lt;/a&gt;, which actually explains the how and why of what has been done.&lt;/p&gt;

&lt;h2 id=&#34;cloudflare-setup&#34;&gt;Cloudflare setup&lt;/h2&gt;

&lt;p&gt;I flipped on a couple of settings, notably forcing HTTPS: Cloudflare Dashboard &amp;gt; Crypto &amp;gt; Always use HTTPS &amp;gt; On and in the same section Crypto &amp;gt; Automatic HTTPS Rewrites &amp;gt; On.&lt;/p&gt;

&lt;p&gt;I increased the Caching &amp;gt; Browser Cache Expiration to 8 days (could/should be more but I don’t want to have to version my assets) and switched on Caching &amp;gt; Always Online™ so that should GitHub Pages fall down, Cloudflare will still serve my content and all would be well.&lt;/p&gt;

&lt;p&gt;That’s pretty much all of my Hugo setup for &lt;a href=&#34;https://codewithhugo.com&#34;&gt;codewithhugo.com&lt;/a&gt; short of a couple of extra images and setting strings in &lt;code&gt;config.toml&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a style=&#34;background-color:black;color:white;text-decoration:none;padding:4px 6px;font-family:-apple-system, BlinkMacSystemFont, &amp;quot;San Francisco&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Ubuntu, Roboto, Noto, &amp;quot;Segoe UI&amp;quot;, Arial, sans-serif;font-size:12px;font-weight:bold;line-height:1.2;display:inline-block;border-radius:3px&#34; href=&#34;https://unsplash.com/@parkerkwhitson?utm_medium=referral&amp;amp;utm_campaign=photographer-credit&amp;amp;utm_content=creditBadge&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; title=&#34;Download free do whatever you want high-resolution photos from Parker Whitson&#34;&gt;&lt;span style=&#34;display:inline-block;padding:2px 3px&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; style=&#34;height:12px;width:auto;position:relative;vertical-align:middle;top:-1px;fill:white&#34; viewBox=&#34;0 0 32 32&#34;&gt;&lt;title&gt;unsplash-logo&lt;/title&gt;&lt;path d=&#34;M20.8 18.1c0 2.7-2.2 4.8-4.8 4.8s-4.8-2.1-4.8-4.8c0-2.7 2.2-4.8 4.8-4.8 2.7.1 4.8 2.2 4.8 4.8zm11.2-7.4v14.9c0 2.3-1.9 4.3-4.3 4.3h-23.4c-2.4 0-4.3-1.9-4.3-4.3v-15c0-2.3 1.9-4.3 4.3-4.3h3.7l.8-2.3c.4-1.1 1.7-2 2.9-2h8.6c1.2 0 2.5.9 2.9 2l.8 2.4h3.7c2.4 0 4.3 1.9 4.3 4.3zm-8.6 7.5c0-4.1-3.3-7.5-7.5-7.5-4.1 0-7.5 3.4-7.5 7.5s3.3 7.5 7.5 7.5c4.2-.1 7.5-3.4 7.5-7.5z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span style=&#34;display:inline-block;padding:2px 3px&#34;&gt;Parker Whitson&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Build and deploy a Vue/React/Vanilla JS app with Parcel and GitHub pages</title>
      <link>https://codewithhugo.com/build-and-deploy-a-vue/react/vanilla-js-app-with-parcel-and-github-pages/</link>
      <pubDate>Tue, 04 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://codewithhugo.com/build-and-deploy-a-vue/react/vanilla-js-app-with-parcel-and-github-pages/</guid>
      <description>&lt;p&gt;Parcel allows us to bundle frontend applications with no configuration and GitHub pages affords us a way to deploy them for free.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s how to use these two tools together to deploy a JavaScript application.&lt;/p&gt;

&lt;p&gt;Full example of a repo deployed like this: &lt;a href=&#34;https://github.com/HugoDF/js-graphql-client-example&#34;&gt;https://github.com/HugoDF/js-graphql-client-example&lt;/a&gt;, and see &lt;a href=&#34;https://codewithhugo.com/js-graphql-client-example/&#34;&gt;https://codewithhugo.com/js-graphql-client-example/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Or the repo with the demos: &lt;a href=&#34;https://github.com/HugoDF/parcel-gh-pages-deploy&#34;&gt;https://github.com/HugoDF/parcel-gh-pages-deploy&lt;/a&gt; and see &lt;a href=&#34;https://codewithhugo.com/parcel-gh-pages-deploy/&#34;&gt;https://codewithhugo.com/parcel-gh-pages-deploy/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;!--
- [Setting up parcel 📦](#setting-up-parcel-%F0%9F%93%A6)
- [Deploying for free 💸](#deploying-for-free-%F0%9F%92%B8)
--&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#setting-up-parcel&#34;&gt;Setting up parcel 📦&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#deploying-for-free&#34;&gt;Deploying for free 💸&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;This was sent out on the &lt;a href=&#34;https://buttondown.email/hugo&#34;&gt;Code with Hugo newsletter&lt;/a&gt; last Monday.
&lt;a href=&#34;https://buttondown.email/hugo&#34;&gt;Subscribe&lt;/a&gt; to get the latest posts right in your inbox (before anyone else).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;setting-up-parcel&#34;&gt;Setting up parcel 📦&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;npm install&lt;/code&gt; &lt;code&gt;--&lt;/code&gt;&lt;code&gt;save-dev parcel&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Say you have an &lt;code&gt;index.html&lt;/code&gt; and &lt;code&gt;client.js&lt;/code&gt; in your root:
&lt;code&gt;index.html&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;!doctype html&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;html&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;no-js&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;http-equiv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;x-ua-compatible&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;ie=edge&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Your site title&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Your site meta description&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;viewport&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;width=device-width, initial-scale=1, shrink-to-fit=no&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;app&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;./client.js&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;client.js&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;$app&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;querySelector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;#app&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;$app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;innerText&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Hello world&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Granted you don’t need to bundle this, but let’s say we do.&lt;/p&gt;

&lt;p&gt;With npm 5+ you can run: &lt;code&gt;npx parcel index.html&lt;/code&gt; (on old npm, &lt;code&gt;./node_modules/.bin/parcel index.html&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Go to &lt;a href=&#34;http://localhost:1234&#34;&gt;http://localhost:1234&lt;/a&gt; or run the command with &lt;code&gt;--open&lt;/code&gt; option (&lt;code&gt;npx parcel index.html --open&lt;/code&gt;), you should see the following:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note the &lt;code&gt;./client.js&lt;/code&gt; path that is relative to where the &lt;code&gt;index.html&lt;/code&gt; is.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&#34;https://d2mxuefqeaa7sj.cloudfront.net/s_E9E094C7512204BB25ABDCD9DE0C74A2094E37B7E71EFEFC5F9B77F1E4873835_1533922372858_Screen+Shot+2018-08-10+at+18.32.24.png&#34; alt=&#34;Hello world Parcel&#34; /&gt;&lt;/p&gt;

&lt;p&gt;React and Vue single file components etc also work with simple &lt;code&gt;.babelrc&lt;/code&gt; include and npm install of respectively &lt;a href=&#34;https://babeljs.io/docs/en/babel-preset-react.html&#34;&gt;&lt;code&gt;babel-preset-react&lt;/code&gt;&lt;/a&gt; or &lt;a href=&#34;https://github.com/vuejs/babel-preset-vue&#34;&gt;&lt;code&gt;babel-preset-vue&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We can put the script in &lt;code&gt;package.json&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;#34;scripts&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;start&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;parcel index.html&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;#34;devDependencies&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;parcel&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;^1.9.7&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And run it with &lt;code&gt;npm start&lt;/code&gt; which will do the same as we did with &lt;code&gt;npx&lt;/code&gt; earlier.&lt;/p&gt;

&lt;h2 id=&#34;deploying-for-free&#34;&gt;Deploying for free 💸&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;npm install --save-dev gh-pages&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;In &lt;code&gt;package.json&lt;/code&gt;:
If you’re building a repo that is not &lt;code&gt;USERNAME.github.io&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;#34;scripts&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;start&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;parcel index.html&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;predeploy&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;rm -rf dist &amp;amp;&amp;amp; parcel build index.html --public-url YOUR_REPO_NAME&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;deploy&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;gh-pages -d dist&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;#34;devDependencies&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;gh-pages&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;^1.2.0&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;parcel&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;^1.9.7&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For our example that means:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;parcel-gh-pages-deploy&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Deploy a parcel app to GitHub pages&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;scripts&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;start&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;parcel index.html&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;predeploy&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;rm -rf dist &amp;amp;&amp;amp; parcel build index.html --public--url /parcel-gh-pages-deploy&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;deploy&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;gh-pages -d dist&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;devDependencies&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;gh-pages&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;^1.2.0&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;parcel&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;^1.9.7&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you &lt;em&gt;are&lt;/em&gt; building &lt;code&gt;USERNAME.github.io&lt;/code&gt;, use the following &lt;code&gt;&amp;quot;&lt;/code&gt;&lt;code&gt;predeploy&lt;/code&gt;&lt;code&gt;&amp;quot;&lt;/code&gt; instead:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;predeploy&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;rm -rf dist &amp;amp;&amp;amp; parcel build index.html&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;❤ GitHub Pages and Parcel.&lt;/p&gt;

&lt;p&gt;For any questions let me know on Twitter &lt;a href=&#34;https://twitter.com/hugo__df&#34;&gt;@hugo__df&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a style=&#34;background-color:black;color:white;text-decoration:none;padding:4px 6px;font-family:-apple-system, BlinkMacSystemFont, &amp;quot;San Francisco&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Ubuntu, Roboto, Noto, &amp;quot;Segoe UI&amp;quot;, Arial, sans-serif;font-size:12px;font-weight:bold;line-height:1.2;display:inline-block;border-radius:3px&#34; href=&#34;https://unsplash.com/@timbatec?utm_medium=referral&amp;amp;utm_campaign=photographer-credit&amp;amp;utm_content=creditBadge&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; title=&#34;Download free do whatever you want high-resolution photos from Pepi Stojanovski&#34;&gt;&lt;span style=&#34;display:inline-block;padding:2px 3px&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; style=&#34;height:12px;width:auto;position:relative;vertical-align:middle;top:-1px;fill:white&#34; viewBox=&#34;0 0 32 32&#34;&gt;&lt;title&gt;unsplash-logo&lt;/title&gt;&lt;path d=&#34;M20.8 18.1c0 2.7-2.2 4.8-4.8 4.8s-4.8-2.1-4.8-4.8c0-2.7 2.2-4.8 4.8-4.8 2.7.1 4.8 2.2 4.8 4.8zm11.2-7.4v14.9c0 2.3-1.9 4.3-4.3 4.3h-23.4c-2.4 0-4.3-1.9-4.3-4.3v-15c0-2.3 1.9-4.3 4.3-4.3h3.7l.8-2.3c.4-1.1 1.7-2 2.9-2h8.6c1.2 0 2.5.9 2.9 2l.8 2.4h3.7c2.4 0 4.3 1.9 4.3 4.3zm-8.6 7.5c0-4.1-3.3-7.5-7.5-7.5-4.1 0-7.5 3.4-7.5 7.5s3.3 7.5 7.5 7.5c4.2-.1 7.5-3.4 7.5-7.5z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span style=&#34;display:inline-block;padding:2px 3px&#34;&gt;Pepi Stojanovski&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Deployment options: Netlify &#43; Dokku on DigitalOcean vs now.sh, GitHub Pages, Heroku and AWS</title>
      <link>https://codewithhugo.com/deployment-options-netlify---dokku-on-digitalocean-vs-now.sh-github-pages-heroku-and-aws/</link>
      <pubDate>Fri, 05 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://codewithhugo.com/deployment-options-netlify---dokku-on-digitalocean-vs-now.sh-github-pages-heroku-and-aws/</guid>
      <description>

&lt;blockquote&gt;
&lt;p&gt;Settling on a &lt;a href=&#34;https://www.netlify.com/&#34;&gt;Netlify&lt;/a&gt; + &lt;a href=&#34;https://github.com/dokku/dokku&#34;&gt;Dokku&lt;/a&gt; on &lt;a href=&#34;https://m.do.co/c/4ee8b2d1adb4&#34;&gt;DigitalOcean&lt;/a&gt; deployment stack for JavaScript and Node.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Over the last few years I’ve never quite settled on a goto deployment strategy for my apps and projects. Technology-wise it has settled towards Vue or static site generators for the frontend with Node on the backend, whether that’s for API servers or handling rendering through handlebars.&lt;/p&gt;

&lt;p&gt;What I’ve finally settled on is &lt;a href=&#34;https://www.netlify.com/&#34;&gt;Netlify&lt;/a&gt; + &lt;a href=&#34;https://github.com/dokku/dokku&#34;&gt;Dokku&lt;/a&gt; on &lt;a href=&#34;https://m.do.co/c/4ee8b2d1adb4&#34;&gt;DigitalOcean&lt;/a&gt;. Netlify for anything static (and more with forms, CMS and lambda). Dokku, “The smallest PaaS implementation you&amp;rsquo;ve ever seen.“ for any backend apps and databases. This is what I’ve used to deploy my latest projects &lt;a href=&#34;https://accountableblogging.com/post-frequency&#34;&gt;Post Frequency&lt;/a&gt; and &lt;a href=&#34;https://accountableblogging.com/post-frequency&#34;&gt;Accountable Blogging&lt;/a&gt;, tools to quantify and improve your blogging output.&lt;/p&gt;

&lt;p&gt;This is a long list of pros/cons for a bunch of services:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;👍 → pro&lt;/li&gt;
&lt;li&gt;👎 → con&lt;/li&gt;
&lt;li&gt;🤔 → undecided&lt;/li&gt;
&lt;li&gt;🚨 → deal-breaker for me&lt;/li&gt;

&lt;li&gt;&lt;p&gt;🤓 → nice-to-have&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;#my-past-deployment-experiences&#34;&gt;My past deployment experiences&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#nowsh&#34;&gt;now.sh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#github-pages&#34;&gt;GitHub Pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#heroku&#34;&gt;Heroku&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#aws&#34;&gt;AWS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#digitalocean&#34;&gt;DigitalOcean&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#vultr&#34;&gt;Vultr&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;#the-stack-moving-forward&#34;&gt;The stack moving forward&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#netlify&#34;&gt;Netlify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#dokku-on-digitalocean&#34;&gt;Dokku on DigitalOcean&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;#setting-dokku-up&#34;&gt;Setting Dokku up&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;#parting-thoughts&#34;&gt;Parting thoughts&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;my-past-deployment-experiences&#34;&gt;My past deployment experiences&lt;/h2&gt;

&lt;p&gt;For these purposes I’ve leaned towards the following deployment options:&lt;/p&gt;

&lt;h3 id=&#34;now-sh-https-now-sh&#34;&gt;&lt;a href=&#34;https://now.sh&#34;&gt;now.sh&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;👍 does static hosting&lt;/li&gt;
&lt;li&gt;👍 does app hosting&lt;/li&gt;
&lt;li&gt;👍 can build your static site/frontend&lt;/li&gt;
&lt;li&gt;👎 no database hosting&lt;/li&gt;
&lt;li&gt;🤔 built-in DNS&lt;/li&gt;
&lt;li&gt;🚨 I didn’t use it to full capacity (only ever had 2 deployments instead of the limit of 5)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;github-pages-https-pages-github-com&#34;&gt;&lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;👍 free&lt;/li&gt;
&lt;li&gt;👍 baked into your GitHub repos (as simple as pushing to &lt;code&gt;gh-pages&lt;/code&gt; branch)&lt;/li&gt;
&lt;li&gt;👍 static hosting&lt;/li&gt;
&lt;li&gt;👎 can’t build your app itself&lt;/li&gt;
&lt;li&gt;👎 for the longest time was difficult to have SSL for (had to pair it with Cloudflare)&lt;/li&gt;
&lt;li&gt;👎 dealing with domain names&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;heroku-https-www-heroku-com&#34;&gt;&lt;a href=&#34;https://www.heroku.com/&#34;&gt;Heroku&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;👍 app hosting&lt;/li&gt;
&lt;li&gt;👍 database hosting (with a generous free tier)&lt;/li&gt;
&lt;li&gt;👍 &lt;code&gt;git push heroku master&lt;/code&gt; deploys&lt;/li&gt;
&lt;li&gt;👍 addons system

&lt;ul&gt;
&lt;li&gt;👍 things like logging aggregation, monitoring are just a click away&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;👍 buildpack system&lt;/li&gt;
&lt;li&gt;👍 easy domain management&lt;/li&gt;
&lt;li&gt;👎 🤑 per app/dyno pricing&lt;/li&gt;
&lt;li&gt;🚨 it’s just not worth it for low traffic apps&lt;/li&gt;
&lt;li&gt;🚨 Scaling Node apps involves increasing the number of processes + a Node process is not very resource intensive, which would get very costly (not that I’ve ever needs to scale my personal apps)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;aws&#34;&gt;AWS&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;👍 has everything you could think of&lt;/li&gt;
&lt;li&gt;👎 dashboard UI&lt;/li&gt;
&lt;li&gt;🚨 pricing once the free tier expires (1 year) is steep even for the smallest instances&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;digitalocean-https-m-do-co-c-4ee8b2d1adb4&#34;&gt;&lt;a href=&#34;https://m.do.co/c/4ee8b2d1adb4&#34;&gt;DigitalOcean&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;👍 dashboard UI&lt;/li&gt;
&lt;li&gt;👍 competitive pricing&lt;/li&gt;
&lt;li&gt;👎 managing the server

&lt;ul&gt;
&lt;li&gt;ssh-ing to install databases, and runtime requirements (Node, pm2)&lt;/li&gt;
&lt;li&gt;deployment over ssh (or at least ssh to &lt;code&gt;git pull&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;👎 setting up nginx 😛

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;I secretly love dealing with nginx configuration, just not at the cost of shipping some code&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;** I won’t mention one-click deploys here because I hadn’t used them before deciding to give Dokku a try*&lt;/p&gt;

&lt;h3 id=&#34;vultr-https-www-vultr-com&#34;&gt;&lt;a href=&#34;https://www.vultr.com/&#34;&gt;Vultr&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;👍 cheapest VPS I could find at the time ($2.50)

&lt;ul&gt;
&lt;li&gt;caveat: the machine specs are what you pay for, which is enough to host a university final year project API + React app&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;👎 managing the server (see &lt;a href=&#34;#digitalocean&#34;&gt;DigitalOcean&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;the-stack-moving-forward&#34;&gt;The stack moving forward&lt;/h2&gt;

&lt;h3 id=&#34;netlify-https-www-netlify-com&#34;&gt;&lt;a href=&#34;https://www.netlify.com/&#34;&gt;Netlify&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;👍 free tier (beyond generous)&lt;/li&gt;
&lt;li&gt;👍 static hosting&lt;/li&gt;
&lt;li&gt;👍 can build your static site/frontend&lt;/li&gt;
&lt;li&gt;🤔 lambda ❤

&lt;ul&gt;
&lt;li&gt;👍 having a backend (that isn’t a backend) for some stuff is cool&lt;/li&gt;
&lt;li&gt;👎 dealing with a bundler for backend code&lt;/li&gt;
&lt;li&gt;👎 debugging minified backend code&lt;/li&gt;
&lt;li&gt;🤔 lambda startup time (can be fine if you have an SPA on the frontend that puts a nice loading state while you wait)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;👍 forms

&lt;ul&gt;
&lt;li&gt;trivial to integrate&lt;/li&gt;
&lt;li&gt;no need to prematurely add a second service eg. to collect email addresses on a landing page&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;👍 Netlify CMS + identity&lt;/li&gt;
&lt;li&gt;🤔 CDN baked in&lt;/li&gt;
&lt;li&gt;👍 DNS&lt;/li&gt;
&lt;li&gt;👍 automatic SSL&lt;/li&gt;
&lt;li&gt;🤓 preview apps&lt;/li&gt;
&lt;li&gt;👍 nice GitHub integration&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;dokku-https-github-com-dokku-dokku-on-digitalocean-https-m-do-co-c-4ee8b2d1adb4&#34;&gt;&lt;a href=&#34;https://github.com/dokku/dokku&#34;&gt;Dokku&lt;/a&gt; on &lt;a href=&#34;https://m.do.co/c/4ee8b2d1adb4&#34;&gt;DigitalOcean&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;👍 as expensive as necessary

&lt;ul&gt;
&lt;li&gt;can have as many apps as you want as long as it doesn’t max out your CPU/RAM&lt;/li&gt;
&lt;li&gt;easy to scale up&lt;/li&gt;
&lt;li&gt;starting for $5/mo&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;👍 &lt;a href=&#34;https://m.do.co/c/4ee8b2d1adb4&#34;&gt;DigitalOcean&lt;/a&gt;’s &lt;a href=&#34;https://www.digitalocean.com/products/one-click-apps/dokku/&#34;&gt;“Dokku one-click deploy”&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Dokku pros and cons (regardless of &lt;a href=&#34;https://m.do.co/c/4ee8b2d1adb4&#34;&gt;DigitalOcean&lt;/a&gt;)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;👍 &lt;code&gt;git push dokku master&lt;/code&gt; deploys&lt;/li&gt;
&lt;li&gt;👍 management from the command line&lt;/li&gt;
&lt;li&gt;👎 no UI by default although &lt;a href=&#34;https://github.com/palfrey/wharf&#34;&gt;https://github.com/palfrey/wharf&lt;/a&gt; could be cool&lt;/li&gt;
&lt;li&gt;👍 easy SSL&lt;/li&gt;
&lt;li&gt;👍 easy domain management&lt;/li&gt;
&lt;li&gt;👍 application hosting&lt;/li&gt;
&lt;li&gt;👍 database hosting&lt;/li&gt;
&lt;li&gt;🤔 multiple apps on one instance

&lt;ul&gt;
&lt;li&gt;if the droplet goes down 2-3 apps go down (I don’t think anyone cares about this)&lt;/li&gt;
&lt;li&gt;a single high traffic app can eat resources (when apps get traffic, move them somewhere else)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;🤔 still self-hosting

&lt;ul&gt;
&lt;li&gt;Except now I need to be able to manage Docker/Dokku stuff&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;setting-dokku-up&#34;&gt;Setting Dokku up&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;👍 &lt;a href=&#34;http://dokku domains:add feed-accountable-blogging feed.accountableblogging.com&#34;&gt;one-click deploy droplet&lt;/a&gt; on &lt;a href=&#34;https://m.do.co/c/4ee8b2d1adb4&#34;&gt;DigitalOcean&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;👎 there isn’t a definitive guide to setting up a DNS record for a subdomain for the Dokku instance

&lt;ul&gt;
&lt;li&gt;here’s my shot at it:&lt;/li&gt;
&lt;li&gt;find out the server’s IP&lt;/li&gt;
&lt;li&gt;create an A record

&lt;ol&gt;
&lt;li&gt;for &lt;code&gt;*.deploy.yourdomain.tld&lt;/code&gt; and &lt;code&gt;deploy.yourdomain.tld&lt;/code&gt; (feel free to replace &lt;code&gt;deploy&lt;/code&gt; with whatever subdomain), for me that was &lt;code&gt;deploy.codewithhugo.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;point the record to the IP address&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;(if you’re on CloudFlare or anything else that can proxy): &lt;strong&gt;don’t use the CDN/proxy feature&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;To check it works, ssh &lt;code&gt;deploy.yourdomain.tld&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;🤔 no local CLI (everything is done over SSH)

&lt;ul&gt;
&lt;li&gt;add &lt;code&gt;alias dokku=&amp;quot;ssh -t dokku@deploy.yourdomain.tld&amp;quot;&lt;/code&gt; to your &lt;code&gt;.bashrc&lt;/code&gt;/&lt;code&gt;.zshrc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;then use &lt;code&gt;dokku &amp;lt;command&amp;gt;&lt;/code&gt; as you would on the remote server&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;👎 same situation for custom domains for apps

&lt;ul&gt;
&lt;li&gt;again, my take on it&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dokku domains:add your-app-name subdomain.domain.tld&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Create a CNAME record

&lt;ol&gt;
&lt;li&gt;name: &lt;code&gt;subdomain&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;value: &lt;code&gt;your-app-name.deploy.yourdomain.tld&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;👍 easy letsencrypt (&lt;a href=&#34;https://github.com/dokku/dokku-letsencrypt&#34;&gt;https://github.com/dokku/dokku-letsencrypt&lt;/a&gt;)

&lt;ul&gt;
&lt;li&gt;ssh into the server&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo dokku plugin:install https://github.com/dokku/dokku-letsencrypt.git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Add letsencrypt to an app&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dokku letsencrypt app-name&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Add letsencrypt certificate auto-renewal CRON job:&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dokku letsencrypt:cron-job --add&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;parting-thoughts&#34;&gt;Parting thoughts&lt;/h2&gt;

&lt;p&gt;My migration of a couple of apps off of now.sh wasn’t to go from bad to good, but rather from good to better (for my needs).&lt;/p&gt;

&lt;p&gt;&lt;a style=&#34;background-color:black;color:white;text-decoration:none;padding:4px 6px;font-family:-apple-system, BlinkMacSystemFont, &amp;quot;San Francisco&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Ubuntu, Roboto, Noto, &amp;quot;Segoe UI&amp;quot;, Arial, sans-serif;font-size:12px;font-weight:bold;line-height:1.2;display:inline-block;border-radius:3px&#34; href=&#34;https://unsplash.com/@billjelen?utm_medium=referral&amp;amp;utm_campaign=photographer-credit&amp;amp;utm_content=creditBadge&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; title=&#34;Download free do whatever you want high-resolution photos from Bill Jelen&#34;&gt;&lt;span style=&#34;display:inline-block;padding:2px 3px&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; style=&#34;height:12px;width:auto;position:relative;vertical-align:middle;top:-1px;fill:white&#34; viewBox=&#34;0 0 32 32&#34;&gt;&lt;title&gt;unsplash-logo&lt;/title&gt;&lt;path d=&#34;M20.8 18.1c0 2.7-2.2 4.8-4.8 4.8s-4.8-2.1-4.8-4.8c0-2.7 2.2-4.8 4.8-4.8 2.7.1 4.8 2.2 4.8 4.8zm11.2-7.4v14.9c0 2.3-1.9 4.3-4.3 4.3h-23.4c-2.4 0-4.3-1.9-4.3-4.3v-15c0-2.3 1.9-4.3 4.3-4.3h3.7l.8-2.3c.4-1.1 1.7-2 2.9-2h8.6c1.2 0 2.5.9 2.9 2l.8 2.4h3.7c2.4 0 4.3 1.9 4.3 4.3zm-8.6 7.5c0-4.1-3.3-7.5-7.5-7.5-4.1 0-7.5 3.4-7.5 7.5s3.3 7.5 7.5 7.5c4.2-.1 7.5-3.4 7.5-7.5z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span style=&#34;display:inline-block;padding:2px 3px&#34;&gt;Bill Jelen&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ObservableHQ notebooks for JavaScript demos and prototypes</title>
      <link>https://codewithhugo.com/observablehq-notebooks-for-javascript-demos-and-prototypes/</link>
      <pubDate>Mon, 08 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://codewithhugo.com/observablehq-notebooks-for-javascript-demos-and-prototypes/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://beta.observablehq.com/&#34;&gt;ObservableHQ&lt;/a&gt; is a platform being built by &lt;a href=&#34;https://twitter.com/mbostock&#34;&gt;Mike Bostock&lt;/a&gt; (creator of the D3 visualisation library), &lt;a href=&#34;https://twitter.com/jashkenas&#34;&gt;Jeremy Ashkenas&lt;/a&gt; (“Made CoffeeScript, Backbone.js, Underscore and other ragbag” from his &lt;a href=&#34;https://twitter.com/jashkenas&#34;&gt;Twitter bio&lt;/a&gt;) and &lt;a href=&#34;https://twitter.com/tmcw&#34;&gt;Tom MacWright&lt;/a&gt; (creator of the big presentation framework, simple-statistics and documentation.js as well as D3 contributor amongst other things).&lt;/p&gt;

&lt;p&gt;Observable is not just another JavaScript sandbox. It introduces the notebook paradigm to JavaScript projects, those of you familiar with Jupyter notebooks, this is the equivalent with JavaScript instead of Python. It turns out JavaScript is very well-suited to this type of paradigm.&lt;/p&gt;

&lt;p&gt;What’s more, JavaScript developers already have some sort of familiarity with reactivity since most frontend frameworks and view libraries build on it. It’s a different kind of reactivity, in that the library only re-renders or re-computes the section of the application that needs it (cf. Vue, Angular, React).&lt;/p&gt;

&lt;p&gt;You can read original post from Bostock detailing what is now ObservableHQ (then called &lt;code&gt;d3.express&lt;/code&gt;),  &lt;a href=&#34;https://medium.com/@mbostock/a-better-way-to-code-2b1d2876a3a0&#34;&gt;“A better way to code” on Medium&lt;/a&gt;. In that post, the state of the art of why and how of data visualisation is explained. A “better way” is described, the “&lt;em&gt;integrated discovery environment”&lt;/em&gt;, or more simply “notebook”-s.&lt;/p&gt;

&lt;p&gt;That inception post is a 20 minute read, but here’s the &lt;strong&gt;tl;dr:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;visualisations are usually one-offs - “&lt;em&gt;The purpose of visualization is insight, not pictures.”&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;reactivity is great for building visualisations and discovering insights from data&lt;/li&gt;
&lt;li&gt;visual outputs help massively especially in the exploration phase&lt;/li&gt;
&lt;li&gt;a well-designed notebook system has the benefit of making chunks of code reusable without much effort (or re-packaging as a library)&lt;/li&gt;
&lt;li&gt;web-based notebooks are accessible from anywhere by anyone (if that’s wanted behaviour)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I especially like points 4 and 5, since they’re not a selling point for notebooks in general but for ObservableHQ’s take on the problem. What you end up with is a well-designed web-based reactive notebook environment that’s suited to prototyping.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#features&#34;&gt;Features&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#cells-and-reactivity&#34;&gt;Cells and reactivity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#display-arbitrary-data-in-arbitrary-ways&#34;&gt;Display arbitrary data in arbitrary ways&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#get-input-of-data-in-arbitrary-ways&#34;&gt;Get input of data in arbitrary ways&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#it-feels-like-working-with-a-view-library&#34;&gt;It feels like working with a view library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#import-of-other-notebooksmodules&#34;&gt;Import of other notebooks/modules&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sample-projects&#34;&gt;Sample projects&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#run-a-simple-emoji-search&#34;&gt;Run a simple Emoji search&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#write-straight-svg-visualisations&#34;&gt;Write straight SVG visualisations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#do-interesting-things-with-web-apis&#34;&gt;Do interesting things with web APIs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#pure-javascript-demos&#34;&gt;Pure JavaScript demos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#css-demos&#34;&gt;CSS demos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#an-exciting-roadmap&#34;&gt;An exciting roadmap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;

&lt;h3 id=&#34;cells-and-reactivity&#34;&gt;Cells and reactivity&lt;/h3&gt;

&lt;p&gt;The evaluation model for ObservableHQ is based around cells that react to each other (you can read more about &lt;a href=&#34;https://beta.observablehq.com/@mbostock/introduction-to-notebooks&#34;&gt;notebooks and cells here&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A cell can be pretty much anything. For example, a cell might contain a few paragraphs of text, like this one. Or a cell might contain images, videos, charts, or other graphical and interactive elements. A cell can also contain data structures, like numbers, strings, arrays and objects. Functions, too.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here’s what Bostock says about reactivity (find the &lt;a href=&#34;https://beta.observablehq.com/@mbostock/introduction-to-code&#34;&gt;full post here&lt;/a&gt;):&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A cell that references other cells is re-evaluated automatically whenever the referenced values change.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So two things happen:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You can stuff anything in cells&lt;/li&gt;
&lt;li&gt;Your cells have an obvious dependency graph according to which they will re-evaluate&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That means you can be sure that for example, if you do a &lt;code&gt;fetch&lt;/code&gt; it will only run once unless you manually get it to re-evaluate or something that the &lt;code&gt;fetch&lt;/code&gt; is dependent on changes. This is in stark contrast to what happens when you’re hacking in JavaScript where each run of the code will cause a &lt;code&gt;fetch&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This kind of reactivity means we don’t have to use precious brain capacity to keep track of what state is in a part of the program. The state is there, spelled out for us in the other cells. So we get faster trial and error (more formally “iteration”) cycles.&lt;/p&gt;

&lt;p&gt;What we also don’t need to worry about is &lt;code&gt;pending&lt;/code&gt; vs &lt;code&gt;resolved&lt;/code&gt; Promises, Observable vs emitted values or what ObservableHQ calls generators. ObservableHQ deals with all these the same way: it gives you the data, not the underlying abstraction, how refreshing not to have to do &lt;code&gt;.then(console.log)&lt;/code&gt; as a sanity check.&lt;/p&gt;

&lt;h3 id=&#34;display-arbitrary-data-in-arbitrary-ways&#34;&gt;Display arbitrary data in arbitrary ways&lt;/h3&gt;

&lt;p&gt;Speaking of &lt;code&gt;console.log&lt;/code&gt;, outputting and observing data doesn’t involve &lt;code&gt;console.log&lt;/code&gt; or &lt;code&gt;debugger&lt;/code&gt;, due to the programming model, tracking data and changes is straightforward.&lt;/p&gt;

&lt;p&gt;Rendering data and text is as simple as using JavaScript string interpolation with a special template literal tag (namely &lt;code&gt;html&lt;/code&gt;, &lt;code&gt;md&lt;/code&gt;). That means you can write inline SVGs based on your data much like you would write JSX (granted, there’s a bit more syntactic noise):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;nx&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&amp;lt;svg&amp;gt;
&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;someData&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
      &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;el&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`&amp;lt;text x=0 y={i * 20}&amp;gt;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;el&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;&amp;lt;/text&amp;gt;`&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;&amp;lt;/svg&amp;gt;`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;get-input-of-data-in-arbitrary-ways&#34;&gt;Get input of data in arbitrary ways&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;User input&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;viewof value = html`&amp;lt;input type=&amp;quot;text&amp;quot; value=&amp;quot;default-value&amp;quot;&amp;gt;`
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Network resources&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;nx&#34;&gt;fetch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;my-url&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;then&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;json&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;File upload&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;viewof file = html`&amp;lt;input type=&amp;quot;file&amp;quot;&amp;gt;`
// use the file as audio or something
fileDataUri = URL.createObjectURL(file)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(see audio waveform example later on)&lt;/p&gt;

&lt;h3 id=&#34;it-feels-like-working-with-a-view-library&#34;&gt;It feels like working with a view library&lt;/h3&gt;

&lt;p&gt;Due to the reactivity and how it handles data, using ObservableHQ feels great, a lot like React/Vue with hot-reloading, except you don’t have dev environment that breaks&lt;/p&gt;

&lt;h3 id=&#34;import-of-other-notebooks-modules&#34;&gt;Import of other notebooks/modules&lt;/h3&gt;

&lt;p&gt;I haven’t used this much (probably because I didn’t build any interesting visualisations), from what I can understand you can import parts of notebooks into another.&lt;/p&gt;

&lt;h2 id=&#34;sample-projects&#34;&gt;Sample projects&lt;/h2&gt;

&lt;h3 id=&#34;run-a-simple-emoji-search&#34;&gt;Run a simple Emoji search&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://d2mxuefqeaa7sj.cloudfront.net/s_3006710316AC061FF0A027D62F4C495878AF5093095B2AF2C7634CDBA1D340A0_1538598277834_image.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://beta.observablehq.com/@hugodf/search-and-download-emoji-from-github&#34;&gt;https://beta.observablehq.com/@hugodf/search-and-download-emoji-from-github&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;write-straight-svg-visualisations&#34;&gt;Write straight SVG visualisations&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://d2mxuefqeaa7sj.cloudfront.net/s_3006710316AC061FF0A027D62F4C495878AF5093095B2AF2C7634CDBA1D340A0_1538598311941_image.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://beta.observablehq.com/@hugodf/reddit-contributions-per-week-graph&#34;&gt;https://beta.observablehq.com/@hugodf/reddit-contributions-per-week-graph&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;do-interesting-things-with-web-apis&#34;&gt;Do interesting things with web APIs&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://d2mxuefqeaa7sj.cloudfront.net/s_3006710316AC061FF0A027D62F4C495878AF5093095B2AF2C7634CDBA1D340A0_1538598350347_image.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://beta.observablehq.com/@hugodf/audio-waveforms&#34;&gt;https://beta.observablehq.com/@hugodf/audio-waveforms&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;pure-javascript-demos&#34;&gt;Pure JavaScript demos&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://beta.observablehq.com/@hugodf/recursion-to-wrap-http-requests&#34;&gt;https://beta.observablehq.com/@hugodf/recursion-to-wrap-http-requests&lt;/a&gt;
&lt;a href=&#34;https://beta.observablehq.com/@hugodf/count-something-in-something-else&#34;&gt;https://beta.observablehq.com/@hugodf/count-something-in-something-else&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;css-demos&#34;&gt;CSS demos&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://beta.observablehq.com/@hugodf/bonus-everyday-situations-you-can-solve-without-javascrip&#34;&gt;https://beta.observablehq.com/@hugodf/bonus-everyday-situations-you-can-solve-without-javascrip&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;an-exciting-roadmap&#34;&gt;An exciting roadmap&lt;/h2&gt;

&lt;p&gt;There are more features that will make ObservableHQ even better like notebook embeds.&lt;/p&gt;

&lt;p&gt;You can find out more on the &lt;a href=&#34;https://talk.observablehq.com/&#34;&gt;ObservableHQ forum&lt;/a&gt; and in the &lt;a href=&#34;https://beta.observablehq.com/collection/@observablehq/changelog&#34;&gt;changelog&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a style=&#34;background-color:black;color:white;text-decoration:none;padding:4px 6px;font-family:-apple-system, BlinkMacSystemFont, &amp;quot;San Francisco&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Ubuntu, Roboto, Noto, &amp;quot;Segoe UI&amp;quot;, Arial, sans-serif;font-size:12px;font-weight:bold;line-height:1.2;display:inline-block;border-radius:3px&#34; href=&#34;https://unsplash.com/@headwayio?utm_medium=referral&amp;amp;utm_campaign=photographer-credit&amp;amp;utm_content=creditBadge&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; title=&#34;Download free do whatever you want high-resolution photos from Headway&#34;&gt;&lt;span style=&#34;display:inline-block;padding:2px 3px&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; style=&#34;height:12px;width:auto;position:relative;vertical-align:middle;top:-1px;fill:white&#34; viewBox=&#34;0 0 32 32&#34;&gt;&lt;title&gt;unsplash-logo&lt;/title&gt;&lt;path d=&#34;M20.8 18.1c0 2.7-2.2 4.8-4.8 4.8s-4.8-2.1-4.8-4.8c0-2.7 2.2-4.8 4.8-4.8 2.7.1 4.8 2.2 4.8 4.8zm11.2-7.4v14.9c0 2.3-1.9 4.3-4.3 4.3h-23.4c-2.4 0-4.3-1.9-4.3-4.3v-15c0-2.3 1.9-4.3 4.3-4.3h3.7l.8-2.3c.4-1.1 1.7-2 2.9-2h8.6c1.2 0 2.5.9 2.9 2l.8 2.4h3.7c2.4 0 4.3 1.9 4.3 4.3zm-8.6 7.5c0-4.1-3.3-7.5-7.5-7.5-4.1 0-7.5 3.4-7.5 7.5s3.3 7.5 7.5 7.5c4.2-.1 7.5-3.4 7.5-7.5z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span style=&#34;display:inline-block;padding:2px 3px&#34;&gt;Headway&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A tiny case study about migrating to Netlify when disaster strikes at GitHub, featuring Cloudflare</title>
      <link>https://codewithhugo.com/a-tiny-case-study-about-migrating-to-netlify-when-disaster-strikes-at-github-featuring-cloudflare/</link>
      <pubDate>Fri, 02 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://codewithhugo.com/a-tiny-case-study-about-migrating-to-netlify-when-disaster-strikes-at-github-featuring-cloudflare/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Last Monday (22 October 2018) GitHub was going 💥, and scheduled content on Code with Hugo wasn’t going live.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For context, the blog’s setup is documented in &lt;a href=&#34;https://codewithhugo.com/switching-the-lights-on-hugo-vs-hugo-config-files/&#34;&gt;“Switching the lights on: Hugo vs Hugo config files”&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;tl;dr&lt;/strong&gt; &lt;em&gt;(as is relevant to this post)&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Cloudflare DNS + CDN + proxying + HTTPS&lt;/li&gt;
&lt;li&gt;GitHub Pages&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io&#34;&gt;Hugo&lt;/a&gt; as a static site generator&lt;/li&gt;
&lt;li&gt;CircleCI to deploy the site daily + on push (🤷‍♀️wasn’t in the post but that’s how I do it)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Contents of this post:&lt;/p&gt;

&lt;!--
- [authorAvatar: https://cdn-images-1.medium.com/fit/c/200/200/0*Rb-aDjpTtV1UZA4O.jpeg](#authoravatar-httpscdn-images-1mediumcomfitc2002000rb-adjpttv1uza4ojpeg)
- [On hosting with a business which isn’t specialised in static hosting 🤔](#on-hosting-with-a-business-which-isnt-specialised-in-static-hosting-)
- [Speedy migration to Netlify ⏩](#speedy-migration-to-netlify-)
- [Why use Cloudflare then?](#why-use-cloudflare-then)
- [The path forward](#the-path-forward)
--&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#on-hosting-with-a-business-which-isnt-specialised-in-static-hosting&#34;&gt;On hosting with a business which isn’t specialised in static hosting 🤔&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#speedy-migration-to-netlify&#34;&gt;Speedy migration to Netlify ⏩&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#why-use-cloudflare-then&#34;&gt;Why use Cloudflare then?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#the-path-forward&#34;&gt;The path forward&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;on-hosting-with-a-business-which-isn-t-specialised-in-static-hosting&#34;&gt;On hosting with a business which isn’t specialised in static hosting 🤔&lt;/h2&gt;

&lt;p&gt;Back to the story: &lt;a href=&#34;https://codewithhugo.com&#34;&gt;codewithhugo.com&lt;/a&gt; was not building or publishing on GitHub Page…
which means my post &lt;a href=&#34;https://codewithhugo.com/simple-but-not-too-simple-how-using-zeits-micro-improves-your-node-applications/&#34;&gt;“Simple but not too simple: how &lt;code&gt;micro&lt;/code&gt; improves your Node applications”&lt;/a&gt;, scheduled for publication at 7AM UTC (I’ll write up how I do this one day &lt;a href=&#34;https://buttondown.email/hugo&#34;&gt;subscribe to get it in your inbox&lt;/a&gt;)… Didn’t go live.&lt;/p&gt;

&lt;p&gt;As it turns out, the GitHub team itself struggled to get a post out during this period: &lt;a href=&#34;https://blog.github.com/2018-10-30-oct21-post-incident-analysis/#2018-october-22-0746-utc&#34;&gt;“We use GitHub Pages internally and all builds had been paused several hours earlier, so publishing this took additional effort.”&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What’s worse, GitHub’s web-hooks and other core APIs were either unavailable or really flakey/disrupted. Which means that migrating to Netlify wasn’t as simple as usual: “deploy from git” wouldn’t work due to disruptions on GitHub’s end.&lt;/p&gt;

&lt;h2 id=&#34;speedy-migration-to-netlify&#34;&gt;Speedy migration to Netlify ⏩&lt;/h2&gt;

&lt;p&gt;A great Netlify feature is “manual deploys”, where you just upload a zip and it deploys it as a static site. Thankfully the latest version on my GitHub Pages repository had the post I wanted (it just couldn’t deploy it).&lt;/p&gt;

&lt;p&gt;Getting the site up on Netlify was simple enough:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;download the repository’s zip archive from GitHub (thankfully this wasn’t on fire 🚒 like the rest of GitHub)&lt;/li&gt;
&lt;li&gt;upload it to Netlify using the dashboard&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At this point the site is live on a &lt;code&gt;*.netlify.com&lt;/code&gt; domain.&lt;/p&gt;

&lt;p&gt;Getting the codewithhugo.com domain pointing to Netlify:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Update the &lt;code&gt;A&lt;/code&gt; records on Cloudflare’s DNS to Netlify’s load balancer &lt;code&gt;104.198.14.52&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What surprised me is how fast the update happened. A DNS update should take time to propagate. Except this wasn’t strictly a DNS update since I’m using Cloudflare’s proxied DNS. That means if you &lt;code&gt;dig codewithhugo.com&lt;/code&gt; you get the following answer section:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;;; ANSWER SECTION:
codewithhugo.com.        299        IN        A        104.27.140.8
codewithhugo.com.        299        IN        A        104.27.141.8
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Suprise! 🎉 those records don’t point to Netlify (or GitHub Pages), they point to Cloudflare (see &lt;a href=&#34;https://www.abuseipdb.com/whois/104.27.140.8&#34;&gt;https://www.abuseipdb.com/whois/104.27.140.8&lt;/a&gt; and &lt;a href=&#34;https://www.abuseipdb.com/whois/104.27.141.8&#34;&gt;https://www.abuseipdb.com/whois/104.27.141.8&lt;/a&gt;). Cloudflare then proxies to Netlify’s load balancer. Super 👏 neat 👏 .&lt;/p&gt;

&lt;h2 id=&#34;why-use-cloudflare-then&#34;&gt;Why use Cloudflare then?&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Well since &lt;a href=&#34;https://twitter.com/github?ref_src=twsrc%5Etfw&#34;&gt;@github&lt;/a&gt; Pages stopped building with all the issues, thanks to &lt;a href=&#34;https://twitter.com/Netlify?ref_src=twsrc%5Etfw&#34;&gt;@Netlify&lt;/a&gt;&amp;rsquo;s &lt;code&gt;zip upload&lt;/code&gt; functionality and &lt;a href=&#34;https://twitter.com/Cloudflare?ref_src=twsrc%5Etfw&#34;&gt;@Cloudflare&lt;/a&gt;&amp;rsquo;s proxied DNS service I&amp;rsquo;ve been able to get the blog post I scheduled for today live.&lt;/p&gt;

&lt;p&gt;👏👍&lt;/p&gt;

&lt;p&gt;— Hugo Di Francesco (@hugo__df) &lt;a href=&#34;https://twitter.com/hugo__df/status/1054350487372349440?ref_src=twsrc%5Etfw&#34;&gt;22 October 2018&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When I first published &lt;a href=&#34;https://codewithhugo.com/switching-the-lights-on-hugo-vs-hugo-config-files/&#34;&gt;“Switching the lights on: Hugo vs Hugo config files”&lt;/a&gt;, one of the reactions I received was: &lt;a href=&#34;https://dev.to/lietux/comment/4od9&#34;&gt;“You don&amp;rsquo;t seem to explain any reason for using CloudFlare on top of GitHub pages. Care to elaborate?”&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To which I replied (&lt;a href=&#34;https://dev.to/hugo__df/comment/5115&#34;&gt;see the comment here&lt;/a&gt;):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;HTTPS (pretty sure it didn&amp;rsquo;t use to be a thing with custom domains on GitHub pages)&lt;/li&gt;
&lt;li&gt;CDN&lt;/li&gt;
&lt;li&gt;DNS&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Which even I didn’t find that compelling, now I guess I do have a compelling reason to use Cloudflare: you’re able to change hosting provider within minutes if you leverage Cloudflare’s proxied DNS + CDN service.&lt;/p&gt;

&lt;p&gt;I think due to Cloudflare’s proxying and Netlify’s manual deploy saving my bacon in this instance (Monday is newsletter day and I wanted to get the &lt;code&gt;micro&lt;/code&gt; post in there), it’s brought value enough to justify my stack choice.&lt;/p&gt;

&lt;h2 id=&#34;the-path-forward&#34;&gt;The path forward&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://d2mxuefqeaa7sj.cloudfront.net/s_5691CB595260242ACD57C6976EE88A660D47EA1777643C78B1E18DEE1EB217B5_1540484787181_image.png&#34; alt=&#34;✅ Don&#39;t switch back to GitHub Pages #codewithhugo&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Since I host my static sites on Netlify now (&lt;a href=&#34;http://Deployment options: Netlify + Dokku on DigitalOcean vs now.sh, GitHub Pages, Heroku and AWS&#34;&gt;see “Deployment options: Netlify + Dokku on DigitalOcean vs now.sh, GitHub Pages, Heroku and AWS”&lt;/a&gt;), I’ve decided that maybe sticking &lt;a href=&#34;https://codewithhugo.com&#34;&gt;codewithhugo.com&lt;/a&gt; on there permanently is a good idea. Sorry GitHub Pages.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you want to migrate a HTML &lt;a href=&#34;https://twitter.com/github?ref_src=twsrc%5Etfw&#34;&gt;@github&lt;/a&gt; Pages site to &lt;a href=&#34;https://twitter.com/Netlify?ref_src=twsrc%5Etfw&#34;&gt;@Netlify&lt;/a&gt; here&amp;rsquo;s an example config (tl;dr: use Publish Directory &amp;ldquo;.&amp;rdquo;) &lt;a href=&#34;https://t.co/pDvlMXnCoc&#34;&gt;pic.twitter.com/pDvlMXnCoc&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;— Hugo Di Francesco (@hugo__df) &lt;a href=&#34;https://twitter.com/hugo__df/status/1054679262584823808?ref_src=twsrc%5Etfw&#34;&gt;23 October 2018&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here’s an example config for deploying a site hosted on GitHub (that would work as a GitHub Pages site) to Netlify:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://d2mxuefqeaa7sj.cloudfront.net/s_5691CB595260242ACD57C6976EE88A660D47EA1777643C78B1E18DEE1EB217B5_1540486742344_DqL5IruWkAAlwyF.jpg&#34; alt=&#34;Example config to deploy a GitHub Pages site from GitHub to Netlify&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Pretty simple, publish the root directory using &lt;code&gt;Publish Directory: .&lt;/code&gt; and don&amp;rsquo;t set a build command.&lt;/p&gt;

&lt;p&gt;GitHub Pages is awesome, my demos are likely to still live there. Disruptions happen to everyone but as is &lt;a href=&#34;https://blog.github.com/2018-10-30-oct21-post-incident-analysis/&#34;&gt;clear in their post-mortem&lt;/a&gt;, GitHub isn’t a static hosting service 🙂. Netlify’s core business proposition is static site hosting and deployment, that’s why &lt;a href=&#34;https://codewithhugo.com&#34;&gt;Code with Hugo&lt;/a&gt; is going to live there from now on 👍.&lt;/p&gt;

&lt;p&gt;&lt;a style=&#34;background-color:black;color:white;text-decoration:none;padding:4px 6px;font-family:-apple-system, BlinkMacSystemFont, &amp;quot;San Francisco&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Ubuntu, Roboto, Noto, &amp;quot;Segoe UI&amp;quot;, Arial, sans-serif;font-size:12px;font-weight:bold;line-height:1.2;display:inline-block;border-radius:3px&#34; href=&#34;https://unsplash.com/@arizonanthony?utm_medium=referral&amp;amp;utm_campaign=photographer-credit&amp;amp;utm_content=creditBadge&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; title=&#34;Download free do whatever you want high-resolution photos from Anthony Cantin&#34;&gt;&lt;span style=&#34;display:inline-block;padding:2px 3px&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; style=&#34;height:12px;width:auto;position:relative;vertical-align:middle;top:-1px;fill:white&#34; viewBox=&#34;0 0 32 32&#34;&gt;&lt;title&gt;unsplash-logo&lt;/title&gt;&lt;path d=&#34;M20.8 18.1c0 2.7-2.2 4.8-4.8 4.8s-4.8-2.1-4.8-4.8c0-2.7 2.2-4.8 4.8-4.8 2.7.1 4.8 2.2 4.8 4.8zm11.2-7.4v14.9c0 2.3-1.9 4.3-4.3 4.3h-23.4c-2.4 0-4.3-1.9-4.3-4.3v-15c0-2.3 1.9-4.3 4.3-4.3h3.7l.8-2.3c.4-1.1 1.7-2 2.9-2h8.6c1.2 0 2.5.9 2.9 2l.8 2.4h3.7c2.4 0 4.3 1.9 4.3 4.3zm-8.6 7.5c0-4.1-3.3-7.5-7.5-7.5-4.1 0-7.5 3.4-7.5 7.5s3.3 7.5 7.5 7.5c4.2-.1 7.5-3.4 7.5-7.5z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span style=&#34;display:inline-block;padding:2px 3px&#34;&gt;Anthony Cantin&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
