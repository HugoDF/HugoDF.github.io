<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tooling on Code with Hugo</title>
    <link>https://codewithhugo.com/tags/tooling/</link>
    <description>Recent content in Tooling on Code with Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Tue, 05 Feb 2019 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://codewithhugo.com/tags/tooling/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Install just redis-cli on Ubuntu, Debian, Jessie</title>
      <link>https://codewithhugo.com/install-just-redis-cli-on-ubuntu-debian-jessie/</link>
      <pubDate>Tue, 24 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://codewithhugo.com/install-just-redis-cli-on-ubuntu-debian-jessie/</guid>
      <description>&lt;p&gt;As part of adding integration tests to an app on CircleCI I ran into the following issues:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;redis-cli&lt;/code&gt;&amp;rsquo;s API has changed from version 2 to 3 to 4

&lt;ul&gt;
&lt;li&gt;ie. this works in v4 &lt;code&gt;redis-cli -u ${REDIS_URL}&lt;/code&gt; but doesn’t in v2&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;the &amp;ldquo;only way&amp;rdquo; to install &lt;code&gt;redis-cli&lt;/code&gt; is through a &lt;code&gt;redis-tools&lt;/code&gt; or &lt;code&gt;redis-server&lt;/code&gt; install and I &lt;em&gt;only&lt;/em&gt; need &lt;code&gt;redis-cli&lt;/code&gt; not the server or any other tools&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What follows is how &lt;em&gt;not&lt;/em&gt; to install &lt;code&gt;redis-cli&lt;/code&gt; and then how to install &lt;code&gt;redis-cli&lt;/code&gt; latest, properly.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This was sent out on the &lt;a href=&#34;https://buttondown.email/hugo&#34;&gt;Code with Hugo newsletter&lt;/a&gt; last Monday.
&lt;a href=&#34;https://buttondown.email/hugo&#34;&gt;Subscribe&lt;/a&gt; to get the latest posts right in your inbox (before anyone else).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;bad&#34;&gt;Bad&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;apt-get install redis-tools&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This installs an outdated version, &lt;code&gt;2.8.x&lt;/code&gt; where stable is &lt;code&gt;4.x.x&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;better&#34;&gt;Better&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;apt-get install redis-server&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Maybe we don’t need the full &lt;code&gt;redis-server&lt;/code&gt; install if we only need the CLI.
Sometimes it also installs the old &lt;code&gt;redis-cli&lt;/code&gt;… not the best.&lt;/p&gt;

&lt;h2 id=&#34;best&#34;&gt;Best&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; /tmp
wget http://download.redis.io/redis-stable.tar.gz
tar xvzf redis-stable.tar.gz
&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; redis-stable
make
cp src/redis-cli /usr/local/bin/
chmod &lt;span class=&#34;m&#34;&gt;755&lt;/span&gt; /usr/local/bin/redis-cli&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You’ll need &lt;code&gt;libjemalloc1 libjemalloc-dev gcc make&lt;/code&gt; most of which should already be installed. We&amp;rsquo;re building from source&amp;hellip; which takes about a minute on the CircleCI containers (so I would expect less everywhere else), which is fine.&lt;/p&gt;

&lt;p&gt;Credit: &lt;a href=&#34;https://www.devops.zone/ha-performance-caching/installing-redis-cli-without-installing-server/&#34;&gt;DevOps Zone, install redis-cli without installing server&lt;/a&gt;. I shamelessly took the snippet from there, because hey, it works.&lt;/p&gt;

&lt;h2 id=&#34;installing-redis-cli-latest-on-circleci&#34;&gt;Installing redis-cli latest on CircleCI&lt;/h2&gt;

&lt;p&gt;Same as above except:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;sudo cp src/redis-cli /usr/local/bin/
sudo chmod &lt;span class=&#34;m&#34;&gt;755&lt;/span&gt; /usr/local/bin/redis-cli&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;CircleCI runs the jobs with a non-root user by default, and kudos to them for that, more tools should make you think about what privileges you have.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m not exactly sure what distribution CircleCI images run, some sort of Debian? Let me know at &lt;a href=&#34;hi@codewithhugo.com&#34;&gt;hi@codewithhugo.com&lt;/a&gt;, or &lt;a href=&#34;https://twitter.com/hugo__df&#34;&gt;@hugo__df&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;installing-redis-cli-latest-on-alpine-in-docker&#34;&gt;Installing redis-cli latest on Alpine in Docker&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;apk --upgrade redis&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you know why this works but &lt;code&gt;apt-get install redis-server&lt;/code&gt; sometimes installs old &lt;code&gt;redis-cli&lt;/code&gt; drop me a line at &lt;a href=&#34;hi@codewithhugo.com&#34;&gt;hi@codewithhugo.com&lt;/a&gt;, or Twitter &lt;a href=&#34;https://twitter.com/hugo__df&#34;&gt;@hugo__df&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a style=&#34;background-color:black;color:white;text-decoration:none;padding:4px 6px;font-family:-apple-system, BlinkMacSystemFont, &amp;quot;San Francisco&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Ubuntu, Roboto, Noto, &amp;quot;Segoe UI&amp;quot;, Arial, sans-serif;font-size:12px;font-weight:bold;line-height:1.2;display:inline-block;border-radius:3px&#34; href=&#34;https://unsplash.com/@nilsjacob?utm_medium=referral&amp;amp;utm_campaign=photographer-credit&amp;amp;utm_content=creditBadge&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; title=&#34;Download free do whatever you want high-resolution photos from Nils Stahl&#34;&gt;&lt;span style=&#34;display:inline-block;padding:2px 3px&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; style=&#34;height:12px;width:auto;position:relative;vertical-align:middle;top:-1px;fill:white&#34; viewBox=&#34;0 0 32 32&#34;&gt;&lt;title&gt;unsplash-logo&lt;/title&gt;&lt;path d=&#34;M20.8 18.1c0 2.7-2.2 4.8-4.8 4.8s-4.8-2.1-4.8-4.8c0-2.7 2.2-4.8 4.8-4.8 2.7.1 4.8 2.2 4.8 4.8zm11.2-7.4v14.9c0 2.3-1.9 4.3-4.3 4.3h-23.4c-2.4 0-4.3-1.9-4.3-4.3v-15c0-2.3 1.9-4.3 4.3-4.3h3.7l.8-2.3c.4-1.1 1.7-2 2.9-2h8.6c1.2 0 2.5.9 2.9 2l.8 2.4h3.7c2.4 0 4.3 1.9 4.3 4.3zm-8.6 7.5c0-4.1-3.3-7.5-7.5-7.5-4.1 0-7.5 3.4-7.5 7.5s3.3 7.5 7.5 7.5c4.2-.1 7.5-3.4 7.5-7.5z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span style=&#34;display:inline-block;padding:2px 3px&#34;&gt;Nils Stahl&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Deploy to multiple environments with git and CircleCI</title>
      <link>https://codewithhugo.com/deploy-to-multiple-environments-with-git-and-circleci/</link>
      <pubDate>Wed, 01 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://codewithhugo.com/deploy-to-multiple-environments-with-git-and-circleci/</guid>
      <description>&lt;p&gt;Easily deploying to multiple environments in a simple manner using GitHub, CircleCI and Heroku.&lt;/p&gt;

&lt;p&gt;Continuous Integration is awesome, but sometimes you need a buffer between auto-deploying things on merge and the production release. To do that with CircleCI requires some git branch-wrangling and a few lines of bash scripting.
We’ll imagine a scenario where a deploy is trivial (ie. we’ll pretend we’re using Heroku). For more complicated build steps we should still be able to follow similar principles.
This is not a CircleCI 2.0 workflows tutorial, it’s more of a git-flow/CircleCI hybrid to have 2 (or more) environments being released to and automatically deployed by CircleCI.&lt;/p&gt;

&lt;p&gt;I would like to thanks Chris Fidao, and &lt;a href=&#34;https://twitter.com/fideloper/status/1020330385333530624&#34;&gt;this tweet&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://codewithhugo.com/img/2018-07-30-chris-fidao-tweet-screenshot.jpg&#34; alt=&#34;🔥 Git is great, but not for what Linus probably intended. Despite its intentions, git(hub|lab|bucket) is actually used for: 1. backup (and distribution) 2. automation 3. release management 4. a hundred other things ..... xxx. version control https://t.co/GLUYkppSLs &amp;amp;mdash; Chris Fidao (@fideloper) https://twitter.com/fideloper/status/1020330385333530624 20 July 2018&#34; /&gt;&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;ll go through how to use GitHub + CircleCI for deployment automation and release management.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This was sent out on the &lt;a href=&#34;https://buttondown.email/hugo&#34;&gt;Code with Hugo newsletter&lt;/a&gt; last Monday.
&lt;a href=&#34;https://buttondown.email/hugo&#34;&gt;Subscribe&lt;/a&gt; to get the latest posts right in your inbox (before anyone else).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;a-branch-setup&#34;&gt;A branch setup 🌳&lt;/h2&gt;

&lt;p&gt;We’ll want a &lt;code&gt;develop&lt;/code&gt; and a &lt;code&gt;master&lt;/code&gt; branch that get auto-deployed. Our default branch should be develop (ie. all pull requests should get merged into.
Thats as simple as running:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;$ git checkout -b develop
$ git push -u origin develop
&lt;span class=&#34;c1&#34;&gt;# There&amp;#39;s usually already a master branch otherwise:
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;$ git checkout -b master
$ git push -u origin master&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We’re using branches because that’s the only primitive that CircleCI understands. On TravisCI or GoCD you would be able to set up “pipelines” for each environment but CircleCI workflows can’t be triggered for different environments manually, so it’s easiest to use git branches.&lt;/p&gt;

&lt;h2 id=&#34;the-workflow&#34;&gt;The workflow 🏞&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Create a feature/task branch&lt;/li&gt;
&lt;li&gt;Complete the task, get the code in a state to be merged&lt;/li&gt;
&lt;li&gt;Open a PR from the feature/task branch to &lt;code&gt;develop&lt;/code&gt;

&lt;ol&gt;
&lt;li&gt;CircleCI runs tests/lint whatever else (not covered in this post)&lt;/li&gt;
&lt;li&gt;Automated checks are all green ✅&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;Review&lt;/li&gt;
&lt;li&gt;The PR is merged into &lt;code&gt;develop&lt;/code&gt;

&lt;ol&gt;
&lt;li&gt;CircleCI runs automated checks again&lt;/li&gt;
&lt;li&gt;CircleCI deploys to development/staging environment if all checks are green&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;To deploy to production, the release has to be manual

&lt;ol&gt;
&lt;li&gt;Merge &lt;code&gt;develop&lt;/code&gt; into &lt;code&gt;master&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;CircleCI runs automated checks again&lt;/li&gt;
&lt;li&gt;CircleCI deploys to production environment if all checks are green&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To make this process easier, we’ll have some release scripts to automate step 6 (merging correctly is easy to do wrong) and some CircleCI config to do steps 5a-b and 6b-c.&lt;/p&gt;

&lt;h2 id=&#34;release-scripts&#34;&gt;Release scripts 🛫&lt;/h2&gt;

&lt;p&gt;The following is  &lt;code&gt;release-production.sh&lt;/code&gt;, we can use it to merge changes from develop → master:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; -e
&lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; -u
&lt;span class=&#34;nv&#34;&gt;RELEASE_FROM&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;develop&amp;#34;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;RELEASE_TO&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;master&amp;#34;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;CURRENT_BRANCH&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;`git branch | grep \* | cut -d &amp;#39; &amp;#39; -f2`&amp;#34;&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Checking out to &amp;#39;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;RELEASE_FROM&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#39; branch and pulling latest&amp;#34;&lt;/span&gt;
git checkout &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;RELEASE_FROM&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt; 
git pull
&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Checking out to &amp;#39;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;RELEASE_TO&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#39; branch and pulling latest&amp;#34;&lt;/span&gt;
git checkout &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;RELEASE_TO&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt; 
git pull
&lt;span class=&#34;nb&#34;&gt;read&lt;/span&gt; -p &lt;span class=&#34;s2&#34;&gt;&amp;#34;Are you sure you want to merge &amp;#39;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;RELEASE_FROM&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#39; into &amp;#39;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;RELEASE_TO&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#39;? (y/n)&amp;#34;&lt;/span&gt; -n &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; -r
&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[[&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$REPLY&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;~ ^&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;Yy&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;$ &lt;span class=&#34;o&#34;&gt;]]&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
    git merge &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;RELEASE_FROM&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt; --ff-only
    git push
&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;

git checkout &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;CURRENT_BRANCH&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here’s a breakdown of the steps of what it does:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Save current branch name&lt;/li&gt;
&lt;li&gt;checkout to the branch we are releasing from (&lt;code&gt;develop&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;pull latest&lt;/li&gt;
&lt;li&gt;checkout to the branch we are releasing to (&lt;code&gt;master&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;pull latest&lt;/li&gt;
&lt;li&gt;prompt before merge&lt;/li&gt;
&lt;li&gt;merge

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--ff-only&lt;/code&gt;, means we run all merges with “fast-forward” which means we won’t get a merge commit, this means there won’t be a merge commit&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;prompt before release&lt;/li&gt;
&lt;li&gt;push&lt;/li&gt;
&lt;li&gt;reset to branch we were initially on&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;logging-in-to-heroku-optional&#34;&gt;Logging in to Heroku (optional) 🔑&lt;/h3&gt;

&lt;p&gt;To store secrets we’ll use CircleCI environment variables setting, and set &lt;code&gt;HEROKU_EMAIL&lt;/code&gt; and &lt;code&gt;HEROKU_TOKEN&lt;/code&gt; through the UI (Settings → Build Settings → Environment Variables).
To get your Heroku token run &lt;code&gt;heroku auth:token&lt;/code&gt;.
To log in to Heroku, use the following in &lt;code&gt;login-heroku.sh&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;cat &amp;gt; ~/.netrc &lt;span class=&#34;s&#34;&gt;&amp;lt;&amp;lt; EOF
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;    machine api.heroku.com
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;        login $HEROKU_EMAIL
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;        password $HEROKU_TOKEN
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;    machine git.heroku.com
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;        login $HEROKU_EMAIL
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;        password $HEROKU_TOKEN
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;EOF&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Add heroku.com to the list of known hosts
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;mkdir ~/.ssh
ssh-keyscan -H heroku.com &amp;gt;&amp;gt; ~/.ssh/known_hosts&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;12-ish-factor-app&#34;&gt;12(ish) factor app 🏗&lt;/h2&gt;

&lt;p&gt;We want to manage configuration somehow, for all the environments as described by &lt;a href=&#34;https://12factor.net/&#34;&gt;https://12factor.net/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;injecting-config-and-secrets&#34;&gt;Injecting config and secrets 💉&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;setup-env.sh&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Switch on &lt;code&gt;CIRCLE_BRANCH&lt;/code&gt;, set some variables conditionally (&lt;code&gt;ENVIRONMENT&lt;/code&gt;, &lt;code&gt;HEROKU_APP&lt;/code&gt;, others not (&lt;code&gt;NODE_ENV&lt;/code&gt;):&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$CIRCLE_BRANCH&lt;/span&gt; in
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;develop&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ENVIRONMENT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;dev&amp;#34;&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;HEROKU_APP&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;some-app&amp;#34;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;master&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ENVIRONMENT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;production&amp;#34;&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;HEROKU_APP&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;some-other-app&amp;#34;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;esac&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;NODE_ENV&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;production&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If we had to set some secrets around here, we would do something like the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$CIRCLE_BRANCH&lt;/span&gt; in
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;develop&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;MY_SECRET&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;MY_SECRET_DEV&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;HEROKU_APP&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;some-app&amp;#34;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;master&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;MY_SECRET&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;MY_SECRET_PRODUCTION&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;esac&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Where &lt;code&gt;MY_SECRET_DEV&lt;/code&gt;  and &lt;code&gt;MY_SECRET_PRODUCTION&lt;/code&gt; are set through CircleCI environment variables (Settings → Build Settings → Environment Variables).&lt;/p&gt;

&lt;h3 id=&#34;run-that-deploy&#34;&gt;Run that deploy 🛬&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;deploy-heroku.sh&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Read setup from &lt;code&gt;setup-env&lt;/code&gt;, add Heroku remote and push current branch to &lt;code&gt;master&lt;/code&gt; on Heroku&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; -e
&lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; -u
&lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt; ./setup-env.sh
&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Pushing branch &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;CIRCLE_BRANCH&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; to app &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;HEROKU_APP&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
git remote add heroku https://git.heroku.com/&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;HEROKU_APP&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;.git
git push heroku &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;CIRCLE_BRANCH&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;:master&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;To have some sort of record of what’s deployed and what’s not, we want to set the &lt;code&gt;COMPARE_URL&lt;/code&gt; and version number (&lt;code&gt;BUILD_NUM&lt;/code&gt;) on Heroku, that requires the Heroku CLI:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; ! -L /usr/local/bin/heroku &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
    wget https://cli-assets.heroku.com/branches/stable/heroku-linux-amd64.tar.gz
    sudo mkdir -p /usr/local/lib /usr/local/bin
    sudo tar -xvzf heroku-linux-amd64.tar.gz -C /usr/local/lib
    sudo ln -s /usr/local/lib/heroku/bin/heroku /usr/local/bin/heroku
&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt; infra/scripts/setup-env.sh
heroku config:set &lt;span class=&#34;nv&#34;&gt;BUILD_NUM&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;CIRCLE_BUILD_NUM&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;COMPARE_URL&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;CIRCLE_COMPARE_URL&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt; -a &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;HEROKU_APP&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All together we end up with the following  &lt;code&gt;.circleci/config.yml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;version&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;jobs&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;deploy&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;docker&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;image&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;circleci/node&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;10.5&lt;/span&gt;.&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# replace with the image you need&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;steps&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;checkout&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;run&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;name&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;Log&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;in&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;to&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;Heroku&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;command&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;bash&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;./login-heroku.sh&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;run&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;name&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;Install&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;Heroku&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;CLI&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;command&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;|
&lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;            wget https://cli-assets.heroku.com/branches/stable/heroku-linux-amd64.tar.gz
&lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;            sudo mkdir -p /usr/local/lib /usr/local/bin
&lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;            sudo tar -xvzf heroku-linux-amd64.tar.gz -C /usr/local/lib
&lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;            sudo ln -s /usr/local/lib/heroku/bin/heroku /usr/local/bin/heroku&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;run&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;name&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;Deploy&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;heroku&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;app&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;command&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;bash&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;infra/deploy-heroku.sh&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;run&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;name&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;Set&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;BUILD_NUM&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;and&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;COMPARE_URL&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;on&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;Heroku&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;to&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;CIRCLECI&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;values&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;command&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;|
&lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;            source ./setup-env.sh
&lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;            heroku config:set BUILD_NUM=${CIRCLE_BUILD_NUM} COMPARE_URL=${CIRCLE_COMPARE_URL} -a ${HEROKU_APP}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;workflows&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;version&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;ci&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;jobs&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;deploy&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;filters&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;branches&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;only&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;develop&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;master&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# You should probably be running&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# some checks before you deploy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# requires:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#  - test&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#  - lint&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This isn’t an exhaustive description of how to set up your CI, but it’s a start.&lt;/p&gt;

&lt;p&gt;Feel free to drop me a line at &lt;a href=&#34;hi@codewithhugo.com&#34;&gt;hi@codewithhugo.com&lt;/a&gt;, or Twitter &lt;a href=&#34;https://twitter.com/hugo__df&#34;&gt;@hugo__df&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a style=&#34;background-color:black;color:white;text-decoration:none;padding:4px 6px;font-family:-apple-system, BlinkMacSystemFont, &amp;quot;San Francisco&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Ubuntu, Roboto, Noto, &amp;quot;Segoe UI&amp;quot;, Arial, sans-serif;font-size:12px;font-weight:bold;line-height:1.2;display:inline-block;border-radius:3px&#34; href=&#34;https://unsplash.com/@fairfilter?utm_medium=referral&amp;amp;utm_campaign=photographer-credit&amp;amp;utm_content=creditBadge&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; title=&#34;Download free do whatever you want high-resolution photos from Oliver Roos&#34;&gt;&lt;span style=&#34;display:inline-block;padding:2px 3px&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; style=&#34;height:12px;width:auto;position:relative;vertical-align:middle;top:-1px;fill:white&#34; viewBox=&#34;0 0 32 32&#34;&gt;&lt;title&gt;unsplash-logo&lt;/title&gt;&lt;path d=&#34;M20.8 18.1c0 2.7-2.2 4.8-4.8 4.8s-4.8-2.1-4.8-4.8c0-2.7 2.2-4.8 4.8-4.8 2.7.1 4.8 2.2 4.8 4.8zm11.2-7.4v14.9c0 2.3-1.9 4.3-4.3 4.3h-23.4c-2.4 0-4.3-1.9-4.3-4.3v-15c0-2.3 1.9-4.3 4.3-4.3h3.7l.8-2.3c.4-1.1 1.7-2 2.9-2h8.6c1.2 0 2.5.9 2.9 2l.8 2.4h3.7c2.4 0 4.3 1.9 4.3 4.3zm-8.6 7.5c0-4.1-3.3-7.5-7.5-7.5-4.1 0-7.5 3.4-7.5 7.5s3.3 7.5 7.5 7.5c4.2-.1 7.5-3.4 7.5-7.5z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span style=&#34;display:inline-block;padding:2px 3px&#34;&gt;Oliver Roos&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Build and deploy a Vue/React/Vanilla JS app with Parcel and GitHub pages</title>
      <link>https://codewithhugo.com/build-and-deploy-a-vue/react/vanilla-js-app-with-parcel-and-github-pages/</link>
      <pubDate>Tue, 04 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://codewithhugo.com/build-and-deploy-a-vue/react/vanilla-js-app-with-parcel-and-github-pages/</guid>
      <description>&lt;p&gt;Parcel allows us to bundle frontend applications with no configuration and GitHub pages affords us a way to deploy them for free.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s how to use these two tools together to deploy a JavaScript application.&lt;/p&gt;

&lt;p&gt;Full example of a repo deployed like this: &lt;a href=&#34;https://github.com/HugoDF/js-graphql-client-example&#34;&gt;https://github.com/HugoDF/js-graphql-client-example&lt;/a&gt;, and see &lt;a href=&#34;https://codewithhugo.com/js-graphql-client-example/&#34;&gt;https://codewithhugo.com/js-graphql-client-example/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Or the repo with the demos: &lt;a href=&#34;https://github.com/HugoDF/parcel-gh-pages-deploy&#34;&gt;https://github.com/HugoDF/parcel-gh-pages-deploy&lt;/a&gt; and see &lt;a href=&#34;https://codewithhugo.com/parcel-gh-pages-deploy/&#34;&gt;https://codewithhugo.com/parcel-gh-pages-deploy/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This was sent out on the &lt;a href=&#34;https://buttondown.email/hugo&#34;&gt;Code with Hugo newsletter&lt;/a&gt; last Monday.
&lt;a href=&#34;https://buttondown.email/hugo&#34;&gt;Subscribe&lt;/a&gt; to get the latest posts right in your inbox (before anyone else).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;setting-up-parcel&#34;&gt;Setting up parcel 📦&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;npm install&lt;/code&gt; &lt;code&gt;--&lt;/code&gt;&lt;code&gt;save-dev parcel&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Say you have an &lt;code&gt;index.html&lt;/code&gt; and &lt;code&gt;client.js&lt;/code&gt; in your root:
&lt;code&gt;index.html&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;!doctype html&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;html&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;no-js&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;http-equiv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;x-ua-compatible&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;ie=edge&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Your site title&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Your site meta description&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;viewport&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;width=device-width, initial-scale=1, shrink-to-fit=no&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;app&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;./client.js&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;client.js&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;$app&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;querySelector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;#app&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;$app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;innerText&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Hello world&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Granted you don’t need to bundle this, but let’s say we do.&lt;/p&gt;

&lt;p&gt;With npm 5+ you can run: &lt;code&gt;npx parcel index.html&lt;/code&gt; (on old npm, &lt;code&gt;./node_modules/.bin/parcel index.html&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Go to &lt;a href=&#34;http://localhost:1234&#34;&gt;http://localhost:1234&lt;/a&gt; or run the command with &lt;code&gt;--open&lt;/code&gt; option (&lt;code&gt;npx parcel index.html --open&lt;/code&gt;), you should see the following:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note the &lt;code&gt;./client.js&lt;/code&gt; path that is relative to where the &lt;code&gt;index.html&lt;/code&gt; is.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&#34;https://d2mxuefqeaa7sj.cloudfront.net/s_E9E094C7512204BB25ABDCD9DE0C74A2094E37B7E71EFEFC5F9B77F1E4873835_1533922372858_Screen+Shot+2018-08-10+at+18.32.24.png&#34; alt=&#34;Hello world Parcel&#34; /&gt;&lt;/p&gt;

&lt;p&gt;React and Vue single file components etc also work with simple &lt;code&gt;.babelrc&lt;/code&gt; include and npm install of respectively &lt;a href=&#34;https://babeljs.io/docs/en/babel-preset-react.html&#34;&gt;&lt;code&gt;babel-preset-react&lt;/code&gt;&lt;/a&gt; or &lt;a href=&#34;https://github.com/vuejs/babel-preset-vue&#34;&gt;&lt;code&gt;babel-preset-vue&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We can put the script in &lt;code&gt;package.json&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;#34;scripts&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;start&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;parcel index.html&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;#34;devDependencies&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;parcel&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;^1.9.7&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And run it with &lt;code&gt;npm start&lt;/code&gt; which will do the same as we did with &lt;code&gt;npx&lt;/code&gt; earlier.&lt;/p&gt;

&lt;h2 id=&#34;deploying-for-free&#34;&gt;Deploying for free 💸&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;npm install --save-dev gh-pages&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;In &lt;code&gt;package.json&lt;/code&gt;:
If you’re building a repo that is not &lt;code&gt;USERNAME.github.io&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;#34;scripts&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;start&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;parcel index.html&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;predeploy&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;rm -rf dist &amp;amp;&amp;amp; parcel build index.html --public-url YOUR_REPO_NAME&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;deploy&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;gh-pages -d dist&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;#34;devDependencies&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;gh-pages&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;^1.2.0&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;parcel&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;^1.9.7&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For our example that means:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;parcel-gh-pages-deploy&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Deploy a parcel app to GitHub pages&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;scripts&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;start&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;parcel index.html&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;predeploy&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;rm -rf dist &amp;amp;&amp;amp; parcel build index.html --public--url /parcel-gh-pages-deploy&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;deploy&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;gh-pages -d dist&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;devDependencies&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;gh-pages&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;^1.2.0&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;parcel&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;^1.9.7&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you &lt;em&gt;are&lt;/em&gt; building &lt;code&gt;USERNAME.github.io&lt;/code&gt;, use the following &lt;code&gt;&amp;quot;&lt;/code&gt;&lt;code&gt;predeploy&lt;/code&gt;&lt;code&gt;&amp;quot;&lt;/code&gt; instead:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;predeploy&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;rm -rf dist &amp;amp;&amp;amp; parcel build index.html&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;❤ GitHub Pages and Parcel.&lt;/p&gt;

&lt;p&gt;For any questions let me know on Twitter &lt;a href=&#34;https://twitter.com/hugo__df&#34;&gt;@hugo__df&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a style=&#34;background-color:black;color:white;text-decoration:none;padding:4px 6px;font-family:-apple-system, BlinkMacSystemFont, &amp;quot;San Francisco&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Ubuntu, Roboto, Noto, &amp;quot;Segoe UI&amp;quot;, Arial, sans-serif;font-size:12px;font-weight:bold;line-height:1.2;display:inline-block;border-radius:3px&#34; href=&#34;https://unsplash.com/@timbatec?utm_medium=referral&amp;amp;utm_campaign=photographer-credit&amp;amp;utm_content=creditBadge&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; title=&#34;Download free do whatever you want high-resolution photos from Pepi Stojanovski&#34;&gt;&lt;span style=&#34;display:inline-block;padding:2px 3px&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; style=&#34;height:12px;width:auto;position:relative;vertical-align:middle;top:-1px;fill:white&#34; viewBox=&#34;0 0 32 32&#34;&gt;&lt;title&gt;unsplash-logo&lt;/title&gt;&lt;path d=&#34;M20.8 18.1c0 2.7-2.2 4.8-4.8 4.8s-4.8-2.1-4.8-4.8c0-2.7 2.2-4.8 4.8-4.8 2.7.1 4.8 2.2 4.8 4.8zm11.2-7.4v14.9c0 2.3-1.9 4.3-4.3 4.3h-23.4c-2.4 0-4.3-1.9-4.3-4.3v-15c0-2.3 1.9-4.3 4.3-4.3h3.7l.8-2.3c.4-1.1 1.7-2 2.9-2h8.6c1.2 0 2.5.9 2.9 2l.8 2.4h3.7c2.4 0 4.3 1.9 4.3 4.3zm-8.6 7.5c0-4.1-3.3-7.5-7.5-7.5-4.1 0-7.5 3.4-7.5 7.5s3.3 7.5 7.5 7.5c4.2-.1 7.5-3.4 7.5-7.5z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span style=&#34;display:inline-block;padding:2px 3px&#34;&gt;Pepi Stojanovski&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>A gentle introduction to GraphQL API integrations</title>
      <link>https://codewithhugo.com/a-gentle-introduction-to-graphql-api-integrations/</link>
      <pubDate>Mon, 10 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://codewithhugo.com/a-gentle-introduction-to-graphql-api-integrations/</guid>
      <description>&lt;p&gt;GraphQL is a great alternative to REST (or other HTTP API designs). This is an quick introduction to the core concepts around &lt;em&gt;consuming&lt;/em&gt; a GraphQL API.&lt;/p&gt;

&lt;p&gt;To see some examples consuming a GraphQL API:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In Python, see &lt;a href=&#34;https://codewithhugo.com/python-graphql-client-requests-example-using-gql/&#34;&gt;Python GraphQL client requests example using gql&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;In JavaScript (browser and Node), &lt;a href=&#34;https://buttondown.email/hugo/archive/9011fe42-c8f7-4201-8b38-d777c1f6910a&#34;&gt;see last week&amp;rsquo;s Code with Hugo newsletter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Table of contents:
&lt;/p&gt;

&lt;h2 id=&#34;what-is-graphql-and-what-problems-does-it-solve&#34;&gt;What is GraphQL and what problems does it solve?&lt;/h2&gt;

&lt;p&gt;GraphQL is &lt;a href=&#34;https://graphql.org&#34;&gt;&amp;ldquo;a query language for your API&amp;rdquo;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In plain English, it makes the client define what (nested) data it needs.&lt;/p&gt;

&lt;p&gt;If we compare it to &lt;a href=&#34;https://en.wikipedia.org/wiki/Representational_state_transfer&#34;&gt;REST&lt;/a&gt; approaches:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the “pure” REST approach is to return IDs (or resource links) for any associations (or nested resources).&lt;/li&gt;
&lt;li&gt;The less pure approach is to expand all the nested stuff.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The first situation leads to having to make lots of calls to fetch all the data, the second leads to huge payloads and slow load times.&lt;/p&gt;

&lt;p&gt;In GraphQL, the client states in the request what it wants expanded, renamed or whatever else in the response.&lt;/p&gt;

&lt;p&gt;It has some nice side-effects, eg. less need to version your API since the client defines what it wants and GraphQL has a way to deprecate fields.&lt;/p&gt;

&lt;h2 id=&#34;schema&#34;&gt;Schema&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/graphql/graphiql&#34;&gt;GraphiQL&lt;/a&gt;, &amp;ldquo;An in-browser IDE for exploring GraphQL.&amp;rdquo; is available by navigating to the endpoint in your browser.
It&amp;rsquo;s possible to generate the schema using the GraphQL CLI (requires Node + npm 5+):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;npx graphql-cli get-schema --endpoint &lt;span class=&#34;nv&#34;&gt;$BASE_URL&lt;/span&gt;/api/graphql --no-all -o schema.graphql&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;queries&#34;&gt;Queries&lt;/h2&gt;

&lt;h3 id=&#34;graphql-query-concepts&#34;&gt;GraphQL query concepts&lt;/h3&gt;

&lt;h4 id=&#34;fields&#34;&gt;Fields&lt;/h4&gt;

&lt;p&gt;What we would like returned in the query, see &lt;a href=&#34;https://graphql.org/learn/queries/#fields/&#34;&gt;the GraphQL documentation for “fields”&lt;/a&gt;.
The GraphQL query for that returns the fields &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;fleeRate&lt;/code&gt;, &lt;code&gt;maxCP&lt;/code&gt;, &lt;code&gt;maxHP&lt;/code&gt;, is the following (see output &lt;a href=&#34;https://graphql-pokemon.now.sh/?query=%7B%0A%20%20pokemon(name%3A%20%22Pikachu%22)%20%7B%0A%20%20%20%20name%0A%20%20%20%20fleeRate%0A%20%20%20%20maxCP%0A%20%20%20%20maxHP%0A%20%20%7D%0A%7D%0A&#34;&gt;here&lt;/a&gt;):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gql&#34; data-lang=&#34;gql&#34;&gt;{
  pokemon(name: &amp;#34;Pikachu&amp;#34;) {
    name
    fleeRate
    maxCP
    maxHP
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;arguments&#34;&gt;Arguments&lt;/h4&gt;

&lt;p&gt;How we are going to filter the query data down, see &lt;a href=&#34;https://graphql.org/learn/queries/#arguments&#34;&gt;the GraphQL documentation for “arguments”&lt;/a&gt;.
To get the names of the first 10 pokemon we use &lt;code&gt;pokemons (first: 10) { FIELDS }&lt;/code&gt;see the output &lt;a href=&#34;https://graphql-pokemon.now.sh/?query=%7B%0A%20%20pokemons%20(first%3A%2010)%20%7B%0A%20%20%20%20name%0A%20%20%20%20fleeRate%0A%20%20%20%20maxCP%0A%20%20%20%20maxHP%0A%20%20%7D%0A%7D%0A&#34;&gt;here&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gql&#34; data-lang=&#34;gql&#34;&gt;{
  pokemons (first: 10) {
    name
    fleeRate
    maxCP
    maxHP
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;aliases&#34;&gt;Aliases&lt;/h4&gt;

&lt;p&gt;Aliases give us the ability to rename fields, see &lt;a href=&#34;https://graphql.org/learn/queries/#aliases&#34;&gt;the GraphQL documentation for “aliases”&lt;/a&gt;.
We&amp;rsquo;re actually going to use it to map fields in the query eg. from camel to snake case:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gql&#34; data-lang=&#34;gql&#34;&gt;{
  pokemon(name: &amp;#34;Pikachu&amp;#34;) {
    evolution_requirements: evolutionRequirements {
      amount
      name
    }
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Running this query (&lt;a href=&#34;https://graphql-pokemon.now.sh/?query=%7B%0A%20%20pokemon(name%3A%20%22Pikachu%22)%20%7B%0A%20%20%20%20evolution_requirements%3A%20evolutionRequirements%20%7B%0A%20%20%20%20%20%20amount%0A%20%20%20%20%20%20name%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%0A&#34;&gt;here&lt;/a&gt;) gives us the following, where the &lt;code&gt;evolutionRequirements&lt;/code&gt; is what we’ve aliased it to.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gql&#34; data-lang=&#34;gql&#34;&gt;{
  &amp;#34;data&amp;#34;: {
    &amp;#34;pokemon&amp;#34;: {
      &amp;#34;evolution_requirements&amp;#34;: {
        &amp;#34;amount&amp;#34;: 50,
        &amp;#34;name&amp;#34;: &amp;#34;Pikachu candies&amp;#34;
      }
    }
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;fragments&#34;&gt;Fragments&lt;/h4&gt;

&lt;p&gt;The definition of fields to be expanded on a type. It&amp;rsquo;s a way to keep the queries DRY and in general split out field definitions that are repeated, re-used or deeply nested, see &lt;a href=&#34;https://graphql.org/learn/queries/#fragments&#34;&gt;the GraphQL documentation for fragments&lt;/a&gt;.
It&amp;rsquo;s going to mean that instead of doing (&lt;a href=&#34;https://graphql-pokemon.now.sh/?query=%0A%7B%0A%20%20pokemon(name%3A%20%22Pikachu%22)%20%7B%0A%20%20%20%20id%0A%20%20%20%20number%0A%20%20%20%20weight%20%7B%0A%20%20%20%20%20%20minimum%0A%20%20%20%20%20%20maximum%0A%20%20%20%20%7D%0A%20%20%20%20height%20%7B%0A%20%20%20%20%20%20minimum%0A%20%20%20%20%20%20maximum%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D&#34;&gt;see&lt;/a&gt; &lt;a href=&#34;https://graphql-pokemon.now.sh/?query=%0A%7B%0A%20%20pokemon(name%3A%20%22Pikachu%22)%20%7B%0A%20%20%20%20weight%20%7B%0A%20%20%20%20%20%20minimum%0A%20%20%20%20%20%20maximum%0A%20%20%20%20%7D%0A%20%20%20%20height%20%7B%0A%20%20%20%20%20%20minimum%0A%20%20%20%20%20%20maximum%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D&#34;&gt;the query in action here&lt;/a&gt;):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gql&#34; data-lang=&#34;gql&#34;&gt;{
  pokemon(name: &amp;#34;Pikachu&amp;#34;) {
    weight {
      minimum
      maximum
    }
    height {
      minimum
      maximum
    }
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can for example run this (&lt;a href=&#34;https://graphql-pokemon.now.sh/?query=%7B%0A%20%20pokemon(name%3A%20%22Pikachu%22)%20%7B%0A%20%20%20%20id%0A%20%20%20%20number%0A%20%20%20%20weight%20%7B...FullPokemonDimensions%7D%0A%20%20%20%20height%20%7B...FullPokemonDimensions%7D%0A%20%20%7D%0A%7D%0A%0Afragment%20FullPokemonDimensions%20on%20PokemonDimension%20%7B%0A%20%20minimum%0A%20%20maximum%0A%7D&#34;&gt;query&lt;/a&gt; &lt;a href=&#34;https://graphql-pokemon.now.sh/?query=%0A%7B%0A%20%20pokemon(name%3A%20%22Pikachu%22)%20%7B%0A%20%20%20%20weight%20%7B...FullPokemonDimensions%7D%0A%20%20%20%20height%20%7B...FullPokemonDimensions%7D%0A%20%20%7D%0A%7D%0A%0Afragment%20FullPokemonDimensions%20on%20PokemonDimension%20%7B%0A%20%20minimum%0A%20%20maximum%0A%7D&#34;&gt;here&lt;/a&gt;):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gql&#34; data-lang=&#34;gql&#34;&gt;{
  pokemon(name: &amp;#34;Pikachu&amp;#34;) {
    weight {...FullPokemonDimensions}
    height {...FullPokemonDimensions}
  }
}

fragment FullPokemonDimensions on PokemonDimension {
  minimum
  maximum
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The output is equivalent:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gql&#34; data-lang=&#34;gql&#34;&gt;{
  &amp;#34;data&amp;#34;: {
    &amp;#34;pokemon&amp;#34;: {
      &amp;#34;weight&amp;#34;: {
        &amp;#34;minimum&amp;#34;: &amp;#34;5.25kg&amp;#34;,
        &amp;#34;maximum&amp;#34;: &amp;#34;6.75kg&amp;#34;
      },
      &amp;#34;height&amp;#34;: {
        &amp;#34;minimum&amp;#34;: &amp;#34;0.35m&amp;#34;,
        &amp;#34;maximum&amp;#34;: &amp;#34;0.45m&amp;#34;
      }
    }
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;running-a-graphql-query&#34;&gt;Running a GraphQL query&lt;/h2&gt;

&lt;p&gt;A GraphQL query can be run over POST or GET, it consists of:&lt;/p&gt;

&lt;h3 id=&#34;post-recommended&#34;&gt;POST (recommended)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Required headers: &lt;code&gt;Content-Type: application/json&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Required JSON body parameter: &lt;code&gt;query: { # insert your query }&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;raw-http-request&#34;&gt;Raw HTTP request&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;POST / HTTP/1.1
Host: graphql-pokemon.now.sh
Content-Type: application/json

{
        &amp;quot;query&amp;quot;: &amp;quot;{ pokemons(first: 10) { name } }&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;curl&#34;&gt;cURL&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;curl -X POST \
  https://graphql-pokemon.now.sh/ \
  -H &#39;Content-Type: application/json&#39; \
  -d &#39;{
        &amp;quot;query&amp;quot;: &amp;quot;{ pokemons(first: 10) { name } }&amp;quot;
    }&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;get&#34;&gt;GET&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Required query param: &lt;code&gt;query&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;raw-http-request-1&#34;&gt;raw HTTP request&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;GET /?query={%20pokemons(first:%2010)%20{%20name%20}%20} HTTP/1.1
Host: graphql-pokemon.now.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;curl-1&#34;&gt;cURL&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;curl -X GET &#39;https://graphql-pokemon.now.sh/?query={%20pokemons%28first:%2010%29%20{%20name%20}%20}&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;top-level-queries&#34;&gt;Top-level queries&lt;/h2&gt;

&lt;p&gt;There are 2 types of queries on the &lt;a href=&#34;https://graphql-pokemon.now.sh/&#34;&gt;GraphQL Pokemon API&lt;/a&gt; at the moment:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;First X pokemon: get all items (with whatever fields are defined in the query)&lt;/li&gt;
&lt;li&gt;Single Pokemon by name: get a single item by its slug (with whatever fields are defined in the query)&lt;/li&gt;
&lt;li&gt;Single Pokemon by id: get a single item by its slug (with whatever fields are defined in the query)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;first-x-pokemon&#34;&gt;First X Pokemon&lt;/h3&gt;

&lt;p&gt;Queries of the form (&lt;a href=&#34;https://graphql-pokemon.now.sh/?query=%7B%0A%20%20pokemons(first%3A%205)%20%7B%0A%20%20%20%20name%0A%20%20%7D%0A%7D&#34;&gt;see it in action in GraphiQL&lt;/a&gt;):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gql&#34; data-lang=&#34;gql&#34;&gt;{
  pokemons(first: 5) {
    name
    # other fields
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;single-pokemon-by-name&#34;&gt;Single Pokemon by name&lt;/h3&gt;

&lt;p&gt;Queries of the form (&lt;a href=&#34;https://graphql-pokemon.now.sh/?query=%7B%0A%20%20pokemon(name%3A%20%22Pikachu%22)%20%7B%0A%20%20%20%20name%0A%20%20%20%20classification%0A%20%20%7D%0A%7D&#34;&gt;see it in action in GraphiQL&lt;/a&gt;):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gql&#34; data-lang=&#34;gql&#34;&gt;{
  pokemon(name: &amp;#34;Pikachu&amp;#34;) {
    name
    classification
    # other fields
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Note the double quotes (&lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt;) around the argument value&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;single-pokemon-by-id&#34;&gt;Single Pokemon by id&lt;/h3&gt;

&lt;p&gt;Queries of the form (&lt;a href=&#34;https://graphql-pokemon.now.sh/?query=%7B%0A%20%20pokemon(id%3A%20%22UG9rZW1vbjowMjU%3D%22)%20%7B%0A%20%20%20%20name%0A%20%20%20%20classification%0A%20%20%7D%0A%7D&#34;&gt;see it in action in GraphiQL&lt;/a&gt;):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gql&#34; data-lang=&#34;gql&#34;&gt;{
  pokemon(id: &amp;#34;UG9rZW1vbjowMjU=&amp;#34;) {
    name
    classification
    # other fields
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Note the double quotes (&lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt;) around the argument value&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;sample-queries&#34;&gt;Sample queries&lt;/h2&gt;

&lt;h3 id=&#34;get-some-pokemon-to-create-strengths-weakness-resistance-classification&#34;&gt;Get some Pokemon to create strengths/weakness/resistance classification&lt;/h3&gt;

&lt;p&gt;Query (&lt;a href=&#34;https://graphql-pokemon.now.sh/?query=%7B%0A%20%20pokemons(first%3A%20100)%20%7B%0A%20%20%20%20name%0A%20%20%20%20image%0A%20%20%20%20maxHP%0A%20%20%20%20types%0A%20%20%20%20weaknesses%0A%20%20%20%20resistant%0A%20%20%7D%0A%7D&#34;&gt;see it in GraphiQL&lt;/a&gt;):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gql&#34; data-lang=&#34;gql&#34;&gt;{
  pokemons(first: 100) {
    name
    image
    maxHP
    types
    weaknesses
    resistant
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;get-pokemon-and-evolutions-expanded-for-physical-stats-and-attacks&#34;&gt;Get Pokemon and evolutions expanded for physical stats and attacks&lt;/h3&gt;

&lt;p&gt;Query (&lt;a href=&#34;https://graphql-pokemon.now.sh/?query=%7B%0A%20%20pokemon(name%3A%20%22Pikachu%22)%20%7B%0A%20%20%20%20...PokemonWithAttack%0A%20%20%20%20...FullPhysicalStats%0A%20%20%20%20evolutions%20%7B%0A%20%20%20%20%20%20...FullPhysicalStats%0A%20%20%20%20%20%20...PokemonWithAttack%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%0A%0Afragment%20PokemonWithAttack%20on%20Pokemon%20%7B%0A%20%20name%0A%20%20attacks%20%7B%0A%20%20%20%20fast%20%7B%0A%20%20%20%20%20%20name%0A%20%20%20%20%20%20type%0A%20%20%20%20%20%20damage%0A%20%20%20%20%7D%0A%20%20%20%20special%20%7B%0A%20%20%20%20%20%20name%0A%20%20%20%20%20%20type%0A%20%20%20%20%20%20damage%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%0A%0Afragment%20FullPhysicalStats%20on%20Pokemon%20%7B%0A%20%20height%20%7B%20...FullDimension%20%7D%0A%20%20weight%20%7B%20...FullDimension%20%7D%0A%7D%0A%0Afragment%20FullDimension%20on%20PokemonDimension%20%7B%0A%20%20minimum%0A%20%20maximum%0A%7D&#34;&gt;see it in GraphiQL&lt;/a&gt;):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gql&#34; data-lang=&#34;gql&#34;&gt;{
  pokemon(name: &amp;#34;Pikachu&amp;#34;) {
    ...PokemonWithAttack
    ...FullPhysicalStats
    evolutions {
      ...FullPhysicalStats
      ...PokemonWithAttack
    }
  }
}

fragment PokemonWithAttack on Pokemon {
  name
  attacks {
    fast {
      name
      type
      damage
    }
    special {
      name
      type
      damage
    }
  }
}

fragment FullPhysicalStats on Pokemon {
  height { ...FullDimension }
  weight { ...FullDimension }
}

fragment FullDimension on PokemonDimension {
  minimum
  maximum
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;get-selected-pokemon-as-named-fields-with-their-evolution-names&#34;&gt;Get selected Pokemon as named fields with their evolution names&lt;/h3&gt;

&lt;p&gt;Query (&lt;a href=&#34;https://graphql-pokemon.now.sh/?query=%7B%0A%20%20pikachu%3A%20pokemon(name%3A%20%22Pikachu%22)%20%7B%0A%20%20%20%20...FullPokemon%0A%20%20%20%20evolutions%20%7B%0A%20%20%20%20%20%20...FullPokemon%0A%20%20%20%20%7D%0A%20%20%7D%0A%20%20bulbasaur%3Apokemon(name%3A%20%22Bulbasaur%22)%20%7B%0A%20%20%20%20...FullPokemon%0A%20%20%20%20evolutions%20%7B%0A%20%20%20%20%20%20...FullPokemon%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%0A%0Afragment%20FullPokemon%20on%20Pokemon%20%7B%0A%20%20name%0A%7D%0A&#34;&gt;see it in GraphiQL&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;We can rename top-level queries using aliases, that&amp;rsquo;s helpful if we want to do the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gql&#34; data-lang=&#34;gql&#34;&gt;{
  pikachu: pokemon(name: &amp;#34;Pikachu&amp;#34;) {
    ...FullPokemon
    evolutions {
      ...FullPokemon
    }
  }
  bulbasaur:pokemon(name: &amp;#34;Bulbasaur&amp;#34;) {
    ...FullPokemon
    evolutions {
      ...FullPokemon
    }
  }
}

fragment FullPokemon on Pokemon {
  name
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you want to learn how to integrate with a GraphQL API:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In Python, see &lt;a href=&#34;https://codewithhugo.com/python-graphql-client-requests-example-using-gql/&#34;&gt;Python GraphQL client requests example using gql&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;In JavaScript (browser and Node), &lt;a href=&#34;https://buttondown.email/hugo/archive/9011fe42-c8f7-4201-8b38-d777c1f6910a&#34;&gt;see last week&amp;rsquo;s Code with Hugo newsletter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a style=&#34;background-color:black;color:white;text-decoration:none;padding:4px 6px;font-family:-apple-system, BlinkMacSystemFont, &amp;quot;San Francisco&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Ubuntu, Roboto, Noto, &amp;quot;Segoe UI&amp;quot;, Arial, sans-serif;font-size:12px;font-weight:bold;line-height:1.2;display:inline-block;border-radius:3px&#34; href=&#34;https://unsplash.com/@anniespratt?utm_medium=referral&amp;amp;utm_campaign=photographer-credit&amp;amp;utm_content=creditBadge&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; title=&#34;Download free do whatever you want high-resolution photos from Annie Spratt&#34;&gt;&lt;span style=&#34;display:inline-block;padding:2px 3px&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; style=&#34;height:12px;width:auto;position:relative;vertical-align:middle;top:-1px;fill:white&#34; viewBox=&#34;0 0 32 32&#34;&gt;&lt;title&gt;unsplash-logo&lt;/title&gt;&lt;path d=&#34;M20.8 18.1c0 2.7-2.2 4.8-4.8 4.8s-4.8-2.1-4.8-4.8c0-2.7 2.2-4.8 4.8-4.8 2.7.1 4.8 2.2 4.8 4.8zm11.2-7.4v14.9c0 2.3-1.9 4.3-4.3 4.3h-23.4c-2.4 0-4.3-1.9-4.3-4.3v-15c0-2.3 1.9-4.3 4.3-4.3h3.7l.8-2.3c.4-1.1 1.7-2 2.9-2h8.6c1.2 0 2.5.9 2.9 2l.8 2.4h3.7c2.4 0 4.3 1.9 4.3 4.3zm-8.6 7.5c0-4.1-3.3-7.5-7.5-7.5-4.1 0-7.5 3.4-7.5 7.5s3.3 7.5 7.5 7.5c4.2-.1 7.5-3.4 7.5-7.5z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span style=&#34;display:inline-block;padding:2px 3px&#34;&gt;Annie Spratt&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Deployment options: Netlify &#43; Dokku on DigitalOcean vs now.sh, GitHub Pages, Heroku and AWS</title>
      <link>https://codewithhugo.com/deployment-options-netlify---dokku-on-digitalocean-vs-now.sh-github-pages-heroku-and-aws/</link>
      <pubDate>Fri, 05 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://codewithhugo.com/deployment-options-netlify---dokku-on-digitalocean-vs-now.sh-github-pages-heroku-and-aws/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Settling on a &lt;a href=&#34;https://www.netlify.com/&#34;&gt;Netlify&lt;/a&gt; + &lt;a href=&#34;https://github.com/dokku/dokku&#34;&gt;Dokku&lt;/a&gt; on &lt;a href=&#34;https://m.do.co/c/4ee8b2d1adb4&#34;&gt;DigitalOcean&lt;/a&gt; deployment stack for JavaScript and Node.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Over the last few years I’ve never quite settled on a goto deployment strategy for my apps and projects. Technology-wise it has settled towards Vue or static site generators for the frontend with Node on the backend, whether that’s for API servers or handling rendering through handlebars.&lt;/p&gt;

&lt;p&gt;What I’ve finally settled on is &lt;a href=&#34;https://www.netlify.com/&#34;&gt;Netlify&lt;/a&gt; + &lt;a href=&#34;https://github.com/dokku/dokku&#34;&gt;Dokku&lt;/a&gt; on &lt;a href=&#34;https://m.do.co/c/4ee8b2d1adb4&#34;&gt;DigitalOcean&lt;/a&gt;. Netlify for anything static (and more with forms, CMS and lambda). Dokku, “The smallest PaaS implementation you&amp;rsquo;ve ever seen.“ for any backend apps and databases. This is what I’ve used to deploy my latest projects &lt;a href=&#34;https://accountableblogging.com/post-frequency&#34;&gt;Post Frequency&lt;/a&gt; and &lt;a href=&#34;https://accountableblogging.com/post-frequency&#34;&gt;Accountable Blogging&lt;/a&gt;, tools to quantify and improve your blogging output.&lt;/p&gt;

&lt;p&gt;This is a long list of pros/cons for a bunch of services:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;👍 → pro&lt;/li&gt;
&lt;li&gt;👎 → con&lt;/li&gt;
&lt;li&gt;🤔 → undecided&lt;/li&gt;
&lt;li&gt;🚨 → deal-breaker for me&lt;/li&gt;
&lt;li&gt;🤓 → nice-to-have&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Table of contents:
&lt;/p&gt;

&lt;h2 id=&#34;my-past-deployment-experiences&#34;&gt;My past deployment experiences&lt;/h2&gt;

&lt;p&gt;For these purposes I’ve leaned towards the following deployment options:&lt;/p&gt;

&lt;h3 id=&#34;now-sh-https-now-sh&#34;&gt;&lt;a href=&#34;https://now.sh&#34;&gt;now.sh&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;👍 does static hosting&lt;/li&gt;
&lt;li&gt;👍 does app hosting&lt;/li&gt;
&lt;li&gt;👍 can build your static site/frontend&lt;/li&gt;
&lt;li&gt;👎 no database hosting&lt;/li&gt;
&lt;li&gt;🤔 built-in DNS&lt;/li&gt;
&lt;li&gt;🚨 I didn’t use it to full capacity (only ever had 2 deployments instead of the limit of 5)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;github-pages-https-pages-github-com&#34;&gt;&lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;👍 free&lt;/li&gt;
&lt;li&gt;👍 baked into your GitHub repos (as simple as pushing to &lt;code&gt;gh-pages&lt;/code&gt; branch)&lt;/li&gt;
&lt;li&gt;👍 static hosting&lt;/li&gt;
&lt;li&gt;👎 can’t build your app itself&lt;/li&gt;
&lt;li&gt;👎 for the longest time was difficult to have SSL for (had to pair it with Cloudflare)&lt;/li&gt;
&lt;li&gt;👎 dealing with domain names&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;heroku-https-www-heroku-com&#34;&gt;&lt;a href=&#34;https://www.heroku.com/&#34;&gt;Heroku&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;👍 app hosting&lt;/li&gt;
&lt;li&gt;👍 database hosting (with a generous free tier)&lt;/li&gt;
&lt;li&gt;👍 &lt;code&gt;git push heroku master&lt;/code&gt; deploys&lt;/li&gt;
&lt;li&gt;👍 addons system

&lt;ul&gt;
&lt;li&gt;👍 things like logging aggregation, monitoring are just a click away&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;👍 buildpack system&lt;/li&gt;
&lt;li&gt;👍 easy domain management&lt;/li&gt;
&lt;li&gt;👎 🤑 per app/dyno pricing&lt;/li&gt;
&lt;li&gt;🚨 it’s just not worth it for low traffic apps&lt;/li&gt;
&lt;li&gt;🚨 Scaling Node apps involves increasing the number of processes + a Node process is not very resource intensive, which would get very costly (not that I’ve ever needs to scale my personal apps)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;aws&#34;&gt;AWS&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;👍 has everything you could think of&lt;/li&gt;
&lt;li&gt;👎 dashboard UI&lt;/li&gt;
&lt;li&gt;🚨 pricing once the free tier expires (1 year) is steep even for the smallest instances&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;digitalocean-https-m-do-co-c-4ee8b2d1adb4&#34;&gt;&lt;a href=&#34;https://m.do.co/c/4ee8b2d1adb4&#34;&gt;DigitalOcean&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;👍 dashboard UI&lt;/li&gt;
&lt;li&gt;👍 competitive pricing&lt;/li&gt;
&lt;li&gt;👎 managing the server

&lt;ul&gt;
&lt;li&gt;ssh-ing to install databases, and runtime requirements (Node, pm2)&lt;/li&gt;
&lt;li&gt;deployment over ssh (or at least ssh to &lt;code&gt;git pull&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;👎 setting up nginx 😛

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;I secretly love dealing with nginx configuration, just not at the cost of shipping some code&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;** I won’t mention one-click deploys here because I hadn’t used them before deciding to give Dokku a try*&lt;/p&gt;

&lt;h3 id=&#34;vultr-https-www-vultr-com&#34;&gt;&lt;a href=&#34;https://www.vultr.com/&#34;&gt;Vultr&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;👍 cheapest VPS I could find at the time ($2.50)

&lt;ul&gt;
&lt;li&gt;caveat: the machine specs are what you pay for, which is enough to host a university final year project API + React app&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;👎 managing the server (see &lt;a href=&#34;#digitalocean&#34;&gt;DigitalOcean&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;the-stack-moving-forward&#34;&gt;The stack moving forward&lt;/h2&gt;

&lt;h3 id=&#34;netlify-https-www-netlify-com&#34;&gt;&lt;a href=&#34;https://www.netlify.com/&#34;&gt;Netlify&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;👍 free tier (beyond generous)&lt;/li&gt;
&lt;li&gt;👍 static hosting&lt;/li&gt;
&lt;li&gt;👍 can build your static site/frontend&lt;/li&gt;
&lt;li&gt;🤔 lambda ❤

&lt;ul&gt;
&lt;li&gt;👍 having a backend (that isn’t a backend) for some stuff is cool&lt;/li&gt;
&lt;li&gt;👎 dealing with a bundler for backend code&lt;/li&gt;
&lt;li&gt;👎 debugging minified backend code&lt;/li&gt;
&lt;li&gt;🤔 lambda startup time (can be fine if you have an SPA on the frontend that puts a nice loading state while you wait)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;👍 forms

&lt;ul&gt;
&lt;li&gt;trivial to integrate&lt;/li&gt;
&lt;li&gt;no need to prematurely add a second service eg. to collect email addresses on a landing page&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;👍 Netlify CMS + identity&lt;/li&gt;
&lt;li&gt;🤔 CDN baked in&lt;/li&gt;
&lt;li&gt;👍 DNS&lt;/li&gt;
&lt;li&gt;👍 automatic SSL&lt;/li&gt;
&lt;li&gt;🤓 preview apps&lt;/li&gt;
&lt;li&gt;👍 nice GitHub integration&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;dokku-https-github-com-dokku-dokku-on-digitalocean-https-m-do-co-c-4ee8b2d1adb4&#34;&gt;&lt;a href=&#34;https://github.com/dokku/dokku&#34;&gt;Dokku&lt;/a&gt; on &lt;a href=&#34;https://m.do.co/c/4ee8b2d1adb4&#34;&gt;DigitalOcean&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;👍 as expensive as necessary

&lt;ul&gt;
&lt;li&gt;can have as many apps as you want as long as it doesn’t max out your CPU/RAM&lt;/li&gt;
&lt;li&gt;easy to scale up&lt;/li&gt;
&lt;li&gt;starting for $5/mo&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;👍 &lt;a href=&#34;https://m.do.co/c/4ee8b2d1adb4&#34;&gt;DigitalOcean&lt;/a&gt;’s &lt;a href=&#34;https://www.digitalocean.com/products/one-click-apps/dokku/&#34;&gt;“Dokku one-click deploy”&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Dokku pros and cons (regardless of &lt;a href=&#34;https://m.do.co/c/4ee8b2d1adb4&#34;&gt;DigitalOcean&lt;/a&gt;)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;👍 &lt;code&gt;git push dokku master&lt;/code&gt; deploys&lt;/li&gt;
&lt;li&gt;👍 management from the command line&lt;/li&gt;
&lt;li&gt;👎 no UI by default although &lt;a href=&#34;https://github.com/palfrey/wharf&#34;&gt;https://github.com/palfrey/wharf&lt;/a&gt; could be cool&lt;/li&gt;
&lt;li&gt;👍 easy SSL&lt;/li&gt;
&lt;li&gt;👍 easy domain management&lt;/li&gt;
&lt;li&gt;👍 application hosting&lt;/li&gt;
&lt;li&gt;👍 database hosting&lt;/li&gt;
&lt;li&gt;🤔 multiple apps on one instance

&lt;ul&gt;
&lt;li&gt;if the droplet goes down 2-3 apps go down (I don’t think anyone cares about this)&lt;/li&gt;
&lt;li&gt;a single high traffic app can eat resources (when apps get traffic, move them somewhere else)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;🤔 still self-hosting

&lt;ul&gt;
&lt;li&gt;Except now I need to be able to manage Docker/Dokku stuff&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;setting-dokku-up&#34;&gt;Setting Dokku up&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;👍 &lt;a href=&#34;http://dokku domains:add feed-accountable-blogging feed.accountableblogging.com&#34;&gt;one-click deploy droplet&lt;/a&gt; on &lt;a href=&#34;https://m.do.co/c/4ee8b2d1adb4&#34;&gt;DigitalOcean&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;👎 there isn’t a definitive guide to setting up a DNS record for a subdomain for the Dokku instance

&lt;ul&gt;
&lt;li&gt;here’s my shot at it:&lt;/li&gt;
&lt;li&gt;find out the server’s IP&lt;/li&gt;
&lt;li&gt;create an A record

&lt;ol&gt;
&lt;li&gt;for &lt;code&gt;*.deploy.yourdomain.tld&lt;/code&gt; and &lt;code&gt;deploy.yourdomain.tld&lt;/code&gt; (feel free to replace &lt;code&gt;deploy&lt;/code&gt; with whatever subdomain), for me that was &lt;code&gt;deploy.codewithhugo.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;point the record to the IP address&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;(if you’re on CloudFlare or anything else that can proxy): &lt;strong&gt;don’t use the CDN/proxy feature&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;To check it works, ssh &lt;code&gt;deploy.yourdomain.tld&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;🤔 no local CLI (everything is done over SSH)

&lt;ul&gt;
&lt;li&gt;add &lt;code&gt;alias dokku=&amp;quot;ssh -t dokku@deploy.yourdomain.tld&amp;quot;&lt;/code&gt; to your &lt;code&gt;.bashrc&lt;/code&gt;/&lt;code&gt;.zshrc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;then use &lt;code&gt;dokku &amp;lt;command&amp;gt;&lt;/code&gt; as you would on the remote server&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;👎 same situation for custom domains for apps

&lt;ul&gt;
&lt;li&gt;again, my take on it&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dokku domains:add your-app-name subdomain.domain.tld&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Create a CNAME record

&lt;ol&gt;
&lt;li&gt;name: &lt;code&gt;subdomain&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;value: &lt;code&gt;your-app-name.deploy.yourdomain.tld&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;👍 easy letsencrypt (&lt;a href=&#34;https://github.com/dokku/dokku-letsencrypt&#34;&gt;https://github.com/dokku/dokku-letsencrypt&lt;/a&gt;)

&lt;ul&gt;
&lt;li&gt;ssh into the server&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo dokku plugin:install https://github.com/dokku/dokku-letsencrypt.git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Add letsencrypt to an app&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dokku letsencrypt app-name&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Add letsencrypt certificate auto-renewal CRON job:&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dokku letsencrypt:cron-job --add&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;parting-thoughts&#34;&gt;Parting thoughts&lt;/h2&gt;

&lt;p&gt;My migration of a couple of apps off of now.sh wasn’t to go from bad to good, but rather from good to better (for my needs).&lt;/p&gt;

&lt;p&gt;&lt;a style=&#34;background-color:black;color:white;text-decoration:none;padding:4px 6px;font-family:-apple-system, BlinkMacSystemFont, &amp;quot;San Francisco&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Ubuntu, Roboto, Noto, &amp;quot;Segoe UI&amp;quot;, Arial, sans-serif;font-size:12px;font-weight:bold;line-height:1.2;display:inline-block;border-radius:3px&#34; href=&#34;https://unsplash.com/@billjelen?utm_medium=referral&amp;amp;utm_campaign=photographer-credit&amp;amp;utm_content=creditBadge&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; title=&#34;Download free do whatever you want high-resolution photos from Bill Jelen&#34;&gt;&lt;span style=&#34;display:inline-block;padding:2px 3px&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; style=&#34;height:12px;width:auto;position:relative;vertical-align:middle;top:-1px;fill:white&#34; viewBox=&#34;0 0 32 32&#34;&gt;&lt;title&gt;unsplash-logo&lt;/title&gt;&lt;path d=&#34;M20.8 18.1c0 2.7-2.2 4.8-4.8 4.8s-4.8-2.1-4.8-4.8c0-2.7 2.2-4.8 4.8-4.8 2.7.1 4.8 2.2 4.8 4.8zm11.2-7.4v14.9c0 2.3-1.9 4.3-4.3 4.3h-23.4c-2.4 0-4.3-1.9-4.3-4.3v-15c0-2.3 1.9-4.3 4.3-4.3h3.7l.8-2.3c.4-1.1 1.7-2 2.9-2h8.6c1.2 0 2.5.9 2.9 2l.8 2.4h3.7c2.4 0 4.3 1.9 4.3 4.3zm-8.6 7.5c0-4.1-3.3-7.5-7.5-7.5-4.1 0-7.5 3.4-7.5 7.5s3.3 7.5 7.5 7.5c4.2-.1 7.5-3.4 7.5-7.5z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span style=&#34;display:inline-block;padding:2px 3px&#34;&gt;Bill Jelen&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Bash Cheatsheet: check if environment variables are set or file/symlinks exists &#43; more</title>
      <link>https://codewithhugo.com/just-enough-bash-to-be-dangerous/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://codewithhugo.com/just-enough-bash-to-be-dangerous/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;A bash scripting cheat sheet for developers who just want to get by.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Writing setup, CI and deployment flows means a bit of the old bash scripting.&lt;/p&gt;

&lt;p&gt;Despite my deep interest in the intricacies of Bash (&lt;em&gt;/sarcasm&lt;/em&gt;), I&amp;rsquo;ve kept hitting up Google and StackOverflow for solutions to the same couple of situations.&lt;/p&gt;

&lt;p&gt;To avoid having to do this again myself and for your reading pleasure, here they are.&lt;/p&gt;

&lt;p&gt;To be dangerous in terms of setup, CI and depoyment flows we will encounter the following:
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This was sent out on the &lt;a href=&#34;https://buttondown.email/hugo&#34;&gt;Code with Hugo newsletter&lt;/a&gt;.
&lt;a href=&#34;https://buttondown.email/hugo&#34;&gt;Subscribe&lt;/a&gt; to get the latest posts right in your inbox (before anyone else).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;check-if-a-file-exists-in-bash&#34;&gt;Check if a file exists in bash&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; ! -f ./pdfgen/pdfgen &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Building pdfgen binary&amp;#34;&lt;/span&gt;
    npm run --prefix pdfgen build:linux
&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Pdfgen binary already exists, skipping build&amp;#34;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;check-if-a-symbolic-link-exists-in-bash&#34;&gt;Check if a (symbolic) link exists in bash&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; ! -L /usr/local/bin/heroku &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
    wget https://cli-assets.heroku.com/branches/stable/heroku-linux-amd64.tar.gz
    sudo mkdir -p /usr/local/lib /usr/local/bin
    sudo tar -xvzf heroku-linux-amd64.tar.gz -C /usr/local/lib
    sudo ln -s /usr/local/lib/heroku/bin/heroku /usr/local/bin/heroku
&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;check-if-an-environment-variable-is-set-in-bash&#34;&gt;Check if an environment variable is set in bash&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# long
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[[&lt;/span&gt; -z &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;CIRCLE_BRANCH&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
    npm run redis-cli flushall
&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
 
npm run sync

&lt;span class=&#34;c1&#34;&gt;# one-liner
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;-z &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;CIRCLE_BRANCH&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; npm run redis-cli flushall&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; npm run sync&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;switch-over-an-environment-variable-in-bash&#34;&gt;Switch over an environment variable in bash&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$CIRCLE_BRANCH&lt;/span&gt; in
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;develop&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ENVIRONMENT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;dev&amp;#34;&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;HEROKU_APP&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;dev-app
        &lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;staging&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ENVIRONMENT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;staging&amp;#34;&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;HEROKU_APP&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;staging-app
        &lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;production&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ENVIRONMENT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;production&amp;#34;&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;HEROKU_APP&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;production-app
        &lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;esac&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;prompt-the-user-in-bash&#34;&gt;Prompt the user in bash&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;nb&#34;&gt;read&lt;/span&gt; -p &lt;span class=&#34;s2&#34;&gt;&amp;#34;Are you sure you want to merge &amp;#39;develop&amp;#39; into &amp;#39;staging&amp;#39;? (y/N)&amp;#34;&lt;/span&gt; -n &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; -r
&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# we like having a new line
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[[&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$REPLY&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;~ ^&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;Yy&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;$ &lt;span class=&#34;o&#34;&gt;]]&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
  git merge develop --ff-only
  git push
&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A final bit of advice, if it&amp;rsquo;s more than a couple of lines, try to use something like JavaScript, or Python to write your script.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve got some resources to do that in modern JavaScript/Node:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://codewithhugo.com/es6-by-example-a-module/cli-to-wait-for-postgres-in-docker-compose/&#34;&gt;ES6 by example: a module/CLI to wait for Postgres in docker-compose&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://codewithhugo.com/how-to-make-beautiful-simple-cli-apps-with-node/&#34;&gt;How to make beautiful, simple CLI apps with Node&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;inject-env-into-your-bash-session-environment&#34;&gt;Inject .env into your bash session/environment&lt;/h2&gt;

&lt;p&gt;We&amp;rsquo;ve got &lt;code&gt;.env&lt;/code&gt; files laying around, Docker Compose deals with this for use usually but say we want to get something running outside of Docker (and without using something like &lt;a href=&#34;https://github.com/motdotla/dotenv&#34;&gt;dotenv&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s the snippet for a *NIX shell:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;cat .env &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; xargs&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a style=&#34;background-color:black;color:white;text-decoration:none;padding:4px 6px;font-family:-apple-system, BlinkMacSystemFont, &amp;quot;San Francisco&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Ubuntu, Roboto, Noto, &amp;quot;Segoe UI&amp;quot;, Arial, sans-serif;font-size:12px;font-weight:bold;line-height:1.2;display:inline-block;border-radius:3px&#34; href=&#34;https://unsplash.com/@guiccunha?utm_medium=referral&amp;amp;utm_campaign=photographer-credit&amp;amp;utm_content=creditBadge&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; title=&#34;Download free do whatever you want high-resolution photos from Guilherme  Cunha&#34;&gt;&lt;span style=&#34;display:inline-block;padding:2px 3px&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; style=&#34;height:12px;width:auto;position:relative;vertical-align:middle;top:-1px;fill:white&#34; viewBox=&#34;0 0 32 32&#34;&gt;&lt;title&gt;unsplash-logo&lt;/title&gt;&lt;path d=&#34;M20.8 18.1c0 2.7-2.2 4.8-4.8 4.8s-4.8-2.1-4.8-4.8c0-2.7 2.2-4.8 4.8-4.8 2.7.1 4.8 2.2 4.8 4.8zm11.2-7.4v14.9c0 2.3-1.9 4.3-4.3 4.3h-23.4c-2.4 0-4.3-1.9-4.3-4.3v-15c0-2.3 1.9-4.3 4.3-4.3h3.7l.8-2.3c.4-1.1 1.7-2 2.9-2h8.6c1.2 0 2.5.9 2.9 2l.8 2.4h3.7c2.4 0 4.3 1.9 4.3 4.3zm-8.6 7.5c0-4.1-3.3-7.5-7.5-7.5-4.1 0-7.5 3.4-7.5 7.5s3.3 7.5 7.5 7.5c4.2-.1 7.5-3.4 7.5-7.5z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span style=&#34;display:inline-block;padding:2px 3px&#34;&gt;Guilherme  Cunha&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
